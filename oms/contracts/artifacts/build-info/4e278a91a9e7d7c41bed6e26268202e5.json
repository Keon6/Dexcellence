{
	"id": "4e278a91a9e7d7c41bed6e26268202e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Order.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.17;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n// An order has a finite set of possible states\nenum OrderState {\n    Submitted,  // Received by contract but not yet stored on-chain\n    Active,     // Recorded in on-chain storage, awaiting fill\n    Filled,     // Terminal state: Maximum quantity filled\n    Cancelled   // Terminal state: Owner does not wish to complete\n}\n\nenum TradeSide {\n    Buy,\n    Sell\n}\n\nstruct OrderLeg {\n    address token;\n    uint quantity;\n    uint price_low;         // price in wei\n    uint price_high;        // all orders should be denominated in Eth (wei)\n    TradeSide side;\n}\n\n\ncontract Order {\n    event Received(address, uint);\n\n    address _exchange;                          // The address of the Exchange contract\n    address payable _owner;                     // The address that can receive the filled order\n    uint _balance;                              // Tracks the Eth funds in the contract\n    mapping(IERC20 => uint) _token_balances;    // Tracks the funds in the contract\n    OrderState _state;                          // Tracks the state of the order\n    OrderLeg[] _legs;                           // An array of child orders\n\n    function validateSellLeg(OrderLeg memory leg) internal {\n        // Validates an order leg with TradeSide.Sell\n        // TODO: check that this address has been allocated the specified token quantity\n    }\n    function validateBuyLeg(OrderLeg memory leg) internal {\n        // Validates an order leg with TradeSide.Buy\n        // TODO: check that this contract has been allocated the specified Eth quantity\n    }\n    function submit() internal {\n        // Records the validated order data with on-chain storage node (IPFS, SWARM, etc)\n    }\n\n    function addLeg(OrderLeg memory leg) internal {\n        // Validate the order leg\n        if (leg.side == TradeSide.Sell) {\n            validateSellLeg(leg);\n        }\n        if (leg.side == TradeSide.Buy) {\n            validateBuyLeg(leg);\n        }\n\n        _legs.push(leg);\n    }\n\n    constructor(\n        address exchange,\n        address payable owner,\n        OrderLeg[] memory legs\n    ) payable {       \n        // Add legs to contract\n        for (uint i = 0; i < legs.length; i++){\n            addLeg(legs[i]);\n        }\n\n        // Validate order legs\n        // Initialize contract values\n        _exchange = exchange;\n        _owner = owner;\n        _balance = msg.value;\n        _state = OrderState.Submitted;\n\n        // Submit the order to on-chain storage\n        submit();\n    }\n\n    // Public Getters\n    function getOwner() public view returns (address) {\n        return _owner;\n    }\n    function getState() public view returns (OrderState) {\n        return _state;\n    }\n    function getBalance() public view returns (uint) {\n        return _balance;\n    }\n\n    // Public Setters\n    function cancel() public {\n        // Modify state to cancel\n        // Require active state\n    }\n    function withdraw() public {\n        // Require terminal state\n        // Transfer token balances and eth balances to owner\n        // Confirm values before sending\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n        _balance += msg.value;\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Order.sol": {
				"Order": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "exchange",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price_low",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price_high",
											"type": "uint256"
										},
										{
											"internalType": "enum TradeSide",
											"name": "side",
											"type": "uint8"
										}
									],
									"internalType": "struct OrderLeg[]",
									"name": "legs",
									"type": "tuple[]"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getState",
							"outputs": [
								{
									"internalType": "enum OrderState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Order.sol\":763:3382  contract Order {... */\n  mstore(0x40, 0x80)\n    /* \"Order.sol\":2171:2679  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Order.sol\":2340:2346  uint i */\n  0x00\n    /* \"Order.sol\":2335:2413  for (uint i = 0; i < legs.length; i++){... */\ntag_5:\n    /* \"Order.sol\":2356:2360  legs */\n  dup2\n    /* \"Order.sol\":2356:2367  legs.length */\n  mload\n    /* \"Order.sol\":2352:2353  i */\n  dup2\n    /* \"Order.sol\":2352:2367  i < legs.length */\n  lt\n    /* \"Order.sol\":2335:2413  for (uint i = 0; i < legs.length; i++){... */\n  iszero\n  tag_6\n  jumpi\n    /* \"Order.sol\":2387:2402  addLeg(legs[i]) */\n  tag_8\n    /* \"Order.sol\":2394:2398  legs */\n  dup3\n    /* \"Order.sol\":2399:2400  i */\n  dup3\n    /* \"Order.sol\":2394:2401  legs[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_9\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\ntag_9:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"Order.sol\":2387:2393  addLeg */\n  shl(0x20, tag_12)\n    /* \"Order.sol\":2387:2402  addLeg(legs[i]) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"Order.sol\":2369:2372  i++ */\n  dup1\n  dup1\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"Order.sol\":2335:2413  for (uint i = 0; i < legs.length; i++){... */\n  jump(tag_5)\ntag_6:\n  pop\n    /* \"Order.sol\":2504:2512  exchange */\n  dup3\n    /* \"Order.sol\":2492:2501  _exchange */\n  0x00\n  dup1\n    /* \"Order.sol\":2492:2512  _exchange = exchange */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Order.sol\":2531:2536  owner */\n  dup2\n    /* \"Order.sol\":2522:2528  _owner */\n  0x01\n  0x00\n    /* \"Order.sol\":2522:2536  _owner = owner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Order.sol\":2557:2566  msg.value */\n  callvalue\n    /* \"Order.sol\":2546:2554  _balance */\n  0x02\n    /* \"Order.sol\":2546:2566  _balance = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Order.sol\":2585:2605  OrderState.Submitted */\n  0x00\n    /* \"Order.sol\":2576:2582  _state */\n  0x04\n  0x00\n    /* \"Order.sol\":2576:2605  _state = OrderState.Submitted */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\ntag_15:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Order.sol\":2664:2672  submit() */\n  tag_18\n    /* \"Order.sol\":2664:2670  submit */\n  shl(0x20, tag_19)\n    /* \"Order.sol\":2664:2672  submit() */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"Order.sol\":2171:2679  constructor(... */\n  pop\n  pop\n  pop\n    /* \"Order.sol\":763:3382  contract Order {... */\n  jump(tag_20)\n    /* \"Order.sol\":1882:2165  function addLeg(OrderLeg memory leg) internal {... */\ntag_12:\n    /* \"Order.sol\":1988:2002  TradeSide.Sell */\n  0x01\n    /* \"Order.sol\":1976:2002  leg.side == TradeSide.Sell */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  tag_23\n  tag_17\n  jump\t// in\ntag_23:\ntag_22:\n    /* \"Order.sol\":1976:1979  leg */\n  dup2\n    /* \"Order.sol\":1976:1984  leg.side */\n  0x80\n  add\n  mload\n    /* \"Order.sol\":1976:2002  leg.side == TradeSide.Sell */\n  0x01\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  tag_25\n  tag_17\n  jump\t// in\ntag_25:\ntag_24:\n  sub\n    /* \"Order.sol\":1972:2049  if (leg.side == TradeSide.Sell) {... */\n  tag_26\n  jumpi\n    /* \"Order.sol\":2018:2038  validateSellLeg(leg) */\n  tag_27\n    /* \"Order.sol\":2034:2037  leg */\n  dup2\n    /* \"Order.sol\":2018:2033  validateSellLeg */\n  shl(0x20, tag_28)\n    /* \"Order.sol\":2018:2038  validateSellLeg(leg) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"Order.sol\":1972:2049  if (leg.side == TradeSide.Sell) {... */\ntag_26:\n    /* \"Order.sol\":2074:2087  TradeSide.Buy */\n  0x00\n    /* \"Order.sol\":2062:2087  leg.side == TradeSide.Buy */\n  0x01\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_17\n  jump\t// in\ntag_30:\ntag_29:\n    /* \"Order.sol\":2062:2065  leg */\n  dup2\n    /* \"Order.sol\":2062:2070  leg.side */\n  0x80\n  add\n  mload\n    /* \"Order.sol\":2062:2087  leg.side == TradeSide.Buy */\n  0x01\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_17\n  jump\t// in\ntag_32:\ntag_31:\n  sub\n    /* \"Order.sol\":2058:2133  if (leg.side == TradeSide.Buy) {... */\n  tag_33\n  jumpi\n    /* \"Order.sol\":2103:2122  validateBuyLeg(leg) */\n  tag_34\n    /* \"Order.sol\":2118:2121  leg */\n  dup2\n    /* \"Order.sol\":2103:2117  validateBuyLeg */\n  shl(0x20, tag_35)\n    /* \"Order.sol\":2103:2122  validateBuyLeg(leg) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"Order.sol\":2058:2133  if (leg.side == TradeSide.Buy) {... */\ntag_33:\n    /* \"Order.sol\":2143:2148  _legs */\n  0x05\n    /* \"Order.sol\":2154:2157  leg */\n  dup2\n    /* \"Order.sol\":2143:2158  _legs.push(leg) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x05\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  tag_38\n  tag_17\n  jump\t// in\ntag_38:\ntag_37:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"Order.sol\":1882:2165  function addLeg(OrderLeg memory leg) internal {... */\n  pop\n  jump\t// out\n    /* \"Order.sol\":1752:1876  function submit() internal {... */\ntag_19:\n  jump\t// out\n    /* \"Order.sol\":1335:1540  function validateSellLeg(OrderLeg memory leg) internal {... */\ntag_28:\n  pop\n  jump\t// out\n    /* \"Order.sol\":1545:1747  function validateBuyLeg(OrderLeg memory leg) internal {... */\ntag_35:\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_42:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_43:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_44:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_45:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_46:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_76\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_45\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_47:\n    /* \"#utility.yul\":641:665   */\n  tag_78\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_46\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_79:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_48:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_81\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:949   */\ntag_49:\n    /* \"#utility.yul\":890:897   */\n  0x00\n    /* \"#utility.yul\":919:943   */\n  tag_83\n    /* \"#utility.yul\":937:942   */\n  dup3\n    /* \"#utility.yul\":919:943   */\n  tag_45\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":908:943   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:949   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":955:1093   */\ntag_50:\n    /* \"#utility.yul\":1036:1068   */\n  tag_85\n    /* \"#utility.yul\":1062:1067   */\n  dup2\n    /* \"#utility.yul\":1036:1068   */\n  tag_49\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":1026:1069   */\n  eq\n    /* \"#utility.yul\":1016:1087   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":1083:1084   */\n  0x00\n    /* \"#utility.yul\":1080:1081   */\n  dup1\n    /* \"#utility.yul\":1073:1085   */\n  revert\n    /* \"#utility.yul\":1016:1087   */\ntag_86:\n    /* \"#utility.yul\":955:1093   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1099:1258   */\ntag_51:\n    /* \"#utility.yul\":1164:1169   */\n  0x00\n    /* \"#utility.yul\":1195:1201   */\n  dup2\n    /* \"#utility.yul\":1189:1202   */\n  mload\n    /* \"#utility.yul\":1180:1202   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1252   */\n  tag_88\n    /* \"#utility.yul\":1246:1251   */\n  dup2\n    /* \"#utility.yul\":1211:1252   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1099:1258   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1264:1381   */\ntag_52:\n    /* \"#utility.yul\":1373:1374   */\n  0x00\n    /* \"#utility.yul\":1370:1371   */\n  dup1\n    /* \"#utility.yul\":1363:1375   */\n  revert\n    /* \"#utility.yul\":1387:1489   */\ntag_53:\n    /* \"#utility.yul\":1428:1434   */\n  0x00\n    /* \"#utility.yul\":1479:1481   */\n  0x1f\n    /* \"#utility.yul\":1475:1482   */\n  not\n    /* \"#utility.yul\":1470:1472   */\n  0x1f\n    /* \"#utility.yul\":1463:1468   */\n  dup4\n    /* \"#utility.yul\":1459:1473   */\n  add\n    /* \"#utility.yul\":1455:1483   */\n  and\n    /* \"#utility.yul\":1445:1483   */\n  swap1\n  pop\n    /* \"#utility.yul\":1387:1489   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1495:1675   */\ntag_54:\n    /* \"#utility.yul\":1543:1620   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1621   */\n  mstore\n    /* \"#utility.yul\":1640:1644   */\n  0x41\n    /* \"#utility.yul\":1637:1638   */\n  0x04\n    /* \"#utility.yul\":1630:1645   */\n  mstore\n    /* \"#utility.yul\":1664:1668   */\n  0x24\n    /* \"#utility.yul\":1661:1662   */\n  0x00\n    /* \"#utility.yul\":1654:1669   */\n  revert\n    /* \"#utility.yul\":1681:1962   */\ntag_55:\n    /* \"#utility.yul\":1764:1791   */\n  tag_93\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1764:1791   */\n  tag_53\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1756:1762   */\n  dup2\n    /* \"#utility.yul\":1752:1792   */\n  add\n    /* \"#utility.yul\":1894:1900   */\n  dup2\n    /* \"#utility.yul\":1882:1892   */\n  dup2\n    /* \"#utility.yul\":1879:1901   */\n  lt\n    /* \"#utility.yul\":1858:1876   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1846:1856   */\n  dup3\n    /* \"#utility.yul\":1843:1877   */\n  gt\n    /* \"#utility.yul\":1840:1902   */\n  or\n    /* \"#utility.yul\":1837:1925   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1905:1923   */\n  tag_95\n  tag_54\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1837:1925   */\ntag_94:\n    /* \"#utility.yul\":1945:1955   */\n  dup1\n    /* \"#utility.yul\":1941:1943   */\n  0x40\n    /* \"#utility.yul\":1934:1956   */\n  mstore\n    /* \"#utility.yul\":1724:1962   */\n  pop\n    /* \"#utility.yul\":1681:1962   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1968:2097   */\ntag_56:\n    /* \"#utility.yul\":2002:2008   */\n  0x00\n    /* \"#utility.yul\":2029:2049   */\n  tag_97\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2019:2049   */\n  swap1\n  pop\n    /* \"#utility.yul\":2058:2091   */\n  tag_98\n    /* \"#utility.yul\":2086:2090   */\n  dup3\n    /* \"#utility.yul\":2078:2084   */\n  dup3\n    /* \"#utility.yul\":2058:2091   */\n  tag_55\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1968:2097   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2103:2439   */\ntag_57:\n    /* \"#utility.yul\":2205:2209   */\n  0x00\n    /* \"#utility.yul\":2295:2313   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2287:2293   */\n  dup3\n    /* \"#utility.yul\":2284:2314   */\n  gt\n    /* \"#utility.yul\":2281:2337   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_101\n  tag_54\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2281:2337   */\ntag_100:\n    /* \"#utility.yul\":2367:2371   */\n  0x20\n    /* \"#utility.yul\":2359:2365   */\n  dup3\n    /* \"#utility.yul\":2355:2372   */\n  mul\n    /* \"#utility.yul\":2347:2372   */\n  swap1\n  pop\n    /* \"#utility.yul\":2427:2431   */\n  0x20\n    /* \"#utility.yul\":2421:2425   */\n  dup2\n    /* \"#utility.yul\":2417:2432   */\n  add\n    /* \"#utility.yul\":2409:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2439   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2445:2562   */\ntag_58:\n    /* \"#utility.yul\":2554:2555   */\n  0x00\n    /* \"#utility.yul\":2551:2552   */\n  dup1\n    /* \"#utility.yul\":2544:2556   */\n  revert\n    /* \"#utility.yul\":2568:2685   */\ntag_59:\n    /* \"#utility.yul\":2677:2678   */\n  0x00\n    /* \"#utility.yul\":2674:2675   */\n  dup1\n    /* \"#utility.yul\":2667:2679   */\n  revert\n    /* \"#utility.yul\":2814:2891   */\ntag_61:\n    /* \"#utility.yul\":2851:2858   */\n  0x00\n    /* \"#utility.yul\":2880:2885   */\n  dup2\n    /* \"#utility.yul\":2869:2885   */\n  swap1\n  pop\n    /* \"#utility.yul\":2814:2891   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2897:3019   */\ntag_62:\n    /* \"#utility.yul\":2970:2994   */\n  tag_107\n    /* \"#utility.yul\":2988:2993   */\n  dup2\n    /* \"#utility.yul\":2970:2994   */\n  tag_61\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2963:2968   */\n  dup2\n    /* \"#utility.yul\":2960:2995   */\n  eq\n    /* \"#utility.yul\":2950:3013   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3009:3010   */\n  0x00\n    /* \"#utility.yul\":3006:3007   */\n  dup1\n    /* \"#utility.yul\":2999:3011   */\n  revert\n    /* \"#utility.yul\":2950:3013   */\ntag_108:\n    /* \"#utility.yul\":2897:3019   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3025:3168   */\ntag_63:\n    /* \"#utility.yul\":3082:3087   */\n  0x00\n    /* \"#utility.yul\":3113:3119   */\n  dup2\n    /* \"#utility.yul\":3107:3120   */\n  mload\n    /* \"#utility.yul\":3098:3120   */\n  swap1\n  pop\n    /* \"#utility.yul\":3129:3162   */\n  tag_110\n    /* \"#utility.yul\":3156:3161   */\n  dup2\n    /* \"#utility.yul\":3129:3162   */\n  tag_62\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3025:3168   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3174:3285   */\ntag_64:\n    /* \"#utility.yul\":3259:3260   */\n  0x02\n    /* \"#utility.yul\":3252:3257   */\n  dup2\n    /* \"#utility.yul\":3249:3261   */\n  lt\n    /* \"#utility.yul\":3239:3279   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":3275:3276   */\n  0x00\n    /* \"#utility.yul\":3272:3273   */\n  dup1\n    /* \"#utility.yul\":3265:3277   */\n  revert\n    /* \"#utility.yul\":3239:3279   */\ntag_112:\n    /* \"#utility.yul\":3174:3285   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:3458   */\ntag_65:\n    /* \"#utility.yul\":3360:3365   */\n  0x00\n    /* \"#utility.yul\":3391:3397   */\n  dup2\n    /* \"#utility.yul\":3385:3398   */\n  mload\n    /* \"#utility.yul\":3376:3398   */\n  swap1\n  pop\n    /* \"#utility.yul\":3407:3452   */\n  tag_114\n    /* \"#utility.yul\":3446:3451   */\n  dup2\n    /* \"#utility.yul\":3407:3452   */\n  tag_64\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3291:3458   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3487:4639   */\ntag_66:\n    /* \"#utility.yul\":3572:3577   */\n  0x00\n    /* \"#utility.yul\":3616:3620   */\n  0xa0\n    /* \"#utility.yul\":3604:3613   */\n  dup3\n    /* \"#utility.yul\":3599:3602   */\n  dup5\n    /* \"#utility.yul\":3595:3614   */\n  sub\n    /* \"#utility.yul\":3591:3621   */\n  slt\n    /* \"#utility.yul\":3588:3705   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3624:3703   */\n  tag_117\n  tag_59\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3588:3705   */\ntag_116:\n    /* \"#utility.yul\":3723:3744   */\n  tag_118\n    /* \"#utility.yul\":3739:3743   */\n  0xa0\n    /* \"#utility.yul\":3723:3744   */\n  tag_56\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3714:3744   */\n  swap1\n  pop\n    /* \"#utility.yul\":3804:3805   */\n  0x00\n    /* \"#utility.yul\":3844:3904   */\n  tag_119\n    /* \"#utility.yul\":3900:3903   */\n  dup5\n    /* \"#utility.yul\":3891:3897   */\n  dup3\n    /* \"#utility.yul\":3880:3889   */\n  dup6\n    /* \"#utility.yul\":3876:3898   */\n  add\n    /* \"#utility.yul\":3844:3904   */\n  tag_48\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3837:3841   */\n  0x00\n    /* \"#utility.yul\":3830:3835   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  add\n    /* \"#utility.yul\":3819:3905   */\n  mstore\n    /* \"#utility.yul\":3754:3916   */\n  pop\n    /* \"#utility.yul\":3979:3981   */\n  0x20\n    /* \"#utility.yul\":4020:4080   */\n  tag_120\n    /* \"#utility.yul\":4076:4079   */\n  dup5\n    /* \"#utility.yul\":4067:4073   */\n  dup3\n    /* \"#utility.yul\":4056:4065   */\n  dup6\n    /* \"#utility.yul\":4052:4074   */\n  add\n    /* \"#utility.yul\":4020:4080   */\n  tag_63\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4013:4017   */\n  0x20\n    /* \"#utility.yul\":4006:4011   */\n  dup4\n    /* \"#utility.yul\":4002:4018   */\n  add\n    /* \"#utility.yul\":3995:4081   */\n  mstore\n    /* \"#utility.yul\":3926:4092   */\n  pop\n    /* \"#utility.yul\":4156:4158   */\n  0x40\n    /* \"#utility.yul\":4197:4257   */\n  tag_121\n    /* \"#utility.yul\":4253:4256   */\n  dup5\n    /* \"#utility.yul\":4244:4250   */\n  dup3\n    /* \"#utility.yul\":4233:4242   */\n  dup6\n    /* \"#utility.yul\":4229:4251   */\n  add\n    /* \"#utility.yul\":4197:4257   */\n  tag_63\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4190:4194   */\n  0x40\n    /* \"#utility.yul\":4183:4188   */\n  dup4\n    /* \"#utility.yul\":4179:4195   */\n  add\n    /* \"#utility.yul\":4172:4258   */\n  mstore\n    /* \"#utility.yul\":4102:4269   */\n  pop\n    /* \"#utility.yul\":4334:4336   */\n  0x60\n    /* \"#utility.yul\":4375:4435   */\n  tag_122\n    /* \"#utility.yul\":4431:4434   */\n  dup5\n    /* \"#utility.yul\":4422:4428   */\n  dup3\n    /* \"#utility.yul\":4411:4420   */\n  dup6\n    /* \"#utility.yul\":4407:4429   */\n  add\n    /* \"#utility.yul\":4375:4435   */\n  tag_63\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4368:4372   */\n  0x60\n    /* \"#utility.yul\":4361:4366   */\n  dup4\n    /* \"#utility.yul\":4357:4373   */\n  add\n    /* \"#utility.yul\":4350:4436   */\n  mstore\n    /* \"#utility.yul\":4279:4447   */\n  pop\n    /* \"#utility.yul\":4506:4509   */\n  0x80\n    /* \"#utility.yul\":4548:4620   */\n  tag_123\n    /* \"#utility.yul\":4616:4619   */\n  dup5\n    /* \"#utility.yul\":4607:4613   */\n  dup3\n    /* \"#utility.yul\":4596:4605   */\n  dup6\n    /* \"#utility.yul\":4592:4614   */\n  add\n    /* \"#utility.yul\":4548:4620   */\n  tag_65\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4541:4545   */\n  0x80\n    /* \"#utility.yul\":4534:4539   */\n  dup4\n    /* \"#utility.yul\":4530:4546   */\n  add\n    /* \"#utility.yul\":4523:4621   */\n  mstore\n    /* \"#utility.yul\":4457:4632   */\n  pop\n    /* \"#utility.yul\":3487:4639   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4670:5477   */\ntag_67:\n    /* \"#utility.yul\":4802:4807   */\n  0x00\n    /* \"#utility.yul\":4827:4933   */\n  tag_125\n    /* \"#utility.yul\":4843:4932   */\n  tag_126\n    /* \"#utility.yul\":4925:4931   */\n  dup5\n    /* \"#utility.yul\":4843:4932   */\n  tag_57\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4827:4933   */\n  tag_56\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4818:4933   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:4958   */\n  dup1\n    /* \"#utility.yul\":4982:4988   */\n  dup4\n    /* \"#utility.yul\":4975:4980   */\n  dup3\n    /* \"#utility.yul\":4968:4989   */\n  mstore\n    /* \"#utility.yul\":5016:5020   */\n  0x20\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5005:5021   */\n  add\n    /* \"#utility.yul\":4998:5021   */\n  swap1\n  pop\n    /* \"#utility.yul\":5069:5073   */\n  0xa0\n    /* \"#utility.yul\":5061:5067   */\n  dup5\n    /* \"#utility.yul\":5057:5074   */\n  mul\n    /* \"#utility.yul\":5049:5055   */\n  dup4\n    /* \"#utility.yul\":5045:5075   */\n  add\n    /* \"#utility.yul\":5098:5101   */\n  dup6\n    /* \"#utility.yul\":5090:5096   */\n  dup2\n    /* \"#utility.yul\":5087:5102   */\n  gt\n    /* \"#utility.yul\":5084:5206   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5117:5196   */\n  tag_128\n  tag_58\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5084:5206   */\ntag_127:\n    /* \"#utility.yul\":5232:5238   */\n  dup4\n    /* \"#utility.yul\":5215:5471   */\ntag_129:\n    /* \"#utility.yul\":5249:5255   */\n  dup2\n    /* \"#utility.yul\":5244:5247   */\n  dup2\n    /* \"#utility.yul\":5241:5256   */\n  lt\n    /* \"#utility.yul\":5215:5471   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5324:5327   */\n  dup1\n    /* \"#utility.yul\":5353:5426   */\n  tag_132\n    /* \"#utility.yul\":5422:5425   */\n  dup9\n    /* \"#utility.yul\":5410:5420   */\n  dup3\n    /* \"#utility.yul\":5353:5426   */\n  tag_66\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5348:5351   */\n  dup5\n    /* \"#utility.yul\":5341:5427   */\n  mstore\n    /* \"#utility.yul\":5456:5460   */\n  0x20\n    /* \"#utility.yul\":5451:5454   */\n  dup5\n    /* \"#utility.yul\":5447:5461   */\n  add\n    /* \"#utility.yul\":5440:5461   */\n  swap4\n  pop\n    /* \"#utility.yul\":5291:5471   */\n  pop\n    /* \"#utility.yul\":5275:5279   */\n  0xa0\n    /* \"#utility.yul\":5270:5273   */\n  dup2\n    /* \"#utility.yul\":5266:5280   */\n  add\n    /* \"#utility.yul\":5259:5280   */\n  swap1\n  pop\n    /* \"#utility.yul\":5215:5471   */\n  jump(tag_129)\ntag_131:\n    /* \"#utility.yul\":5219:5240   */\n  pop\n    /* \"#utility.yul\":4808:5477   */\n  pop\n  pop\n    /* \"#utility.yul\":4670:5477   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5508:5943   */\ntag_68:\n    /* \"#utility.yul\":5615:5620   */\n  0x00\n    /* \"#utility.yul\":5664:5667   */\n  dup3\n    /* \"#utility.yul\":5657:5661   */\n  0x1f\n    /* \"#utility.yul\":5649:5655   */\n  dup4\n    /* \"#utility.yul\":5645:5662   */\n  add\n    /* \"#utility.yul\":5641:5668   */\n  slt\n    /* \"#utility.yul\":5631:5753   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5672:5751   */\n  tag_135\n  tag_52\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5631:5753   */\ntag_134:\n    /* \"#utility.yul\":5782:5788   */\n  dup2\n    /* \"#utility.yul\":5776:5789   */\n  mload\n    /* \"#utility.yul\":5807:5937   */\n  tag_136\n    /* \"#utility.yul\":5933:5936   */\n  dup5\n    /* \"#utility.yul\":5925:5931   */\n  dup3\n    /* \"#utility.yul\":5918:5922   */\n  0x20\n    /* \"#utility.yul\":5910:5916   */\n  dup7\n    /* \"#utility.yul\":5906:5923   */\n  add\n    /* \"#utility.yul\":5807:5937   */\n  tag_67\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5798:5937   */\n  swap2\n  pop\n    /* \"#utility.yul\":5621:5943   */\n  pop\n    /* \"#utility.yul\":5508:5943   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5949:6881   */\ntag_2:\n    /* \"#utility.yul\":6095:6101   */\n  0x00\n    /* \"#utility.yul\":6103:6109   */\n  dup1\n    /* \"#utility.yul\":6111:6117   */\n  0x00\n    /* \"#utility.yul\":6160:6162   */\n  0x60\n    /* \"#utility.yul\":6148:6157   */\n  dup5\n    /* \"#utility.yul\":6139:6146   */\n  dup7\n    /* \"#utility.yul\":6135:6158   */\n  sub\n    /* \"#utility.yul\":6131:6163   */\n  slt\n    /* \"#utility.yul\":6128:6247   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6166:6245   */\n  tag_139\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6128:6247   */\ntag_138:\n    /* \"#utility.yul\":6286:6287   */\n  0x00\n    /* \"#utility.yul\":6311:6375   */\n  tag_140\n    /* \"#utility.yul\":6367:6374   */\n  dup7\n    /* \"#utility.yul\":6358:6364   */\n  dup3\n    /* \"#utility.yul\":6347:6356   */\n  dup8\n    /* \"#utility.yul\":6343:6365   */\n  add\n    /* \"#utility.yul\":6311:6375   */\n  tag_48\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6301:6375   */\n  swap4\n  pop\n    /* \"#utility.yul\":6257:6385   */\n  pop\n    /* \"#utility.yul\":6424:6426   */\n  0x20\n    /* \"#utility.yul\":6450:6522   */\n  tag_141\n    /* \"#utility.yul\":6514:6521   */\n  dup7\n    /* \"#utility.yul\":6505:6511   */\n  dup3\n    /* \"#utility.yul\":6494:6503   */\n  dup8\n    /* \"#utility.yul\":6490:6512   */\n  add\n    /* \"#utility.yul\":6450:6522   */\n  tag_51\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6440:6522   */\n  swap3\n  pop\n    /* \"#utility.yul\":6395:6532   */\n  pop\n    /* \"#utility.yul\":6592:6594   */\n  0x40\n    /* \"#utility.yul\":6581:6590   */\n  dup5\n    /* \"#utility.yul\":6577:6595   */\n  add\n    /* \"#utility.yul\":6571:6596   */\n  mload\n    /* \"#utility.yul\":6623:6641   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6615:6621   */\n  dup2\n    /* \"#utility.yul\":6612:6642   */\n  gt\n    /* \"#utility.yul\":6609:6726   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6645:6724   */\n  tag_143\n  tag_44\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6609:6726   */\ntag_142:\n    /* \"#utility.yul\":6750:6864   */\n  tag_144\n    /* \"#utility.yul\":6856:6863   */\n  dup7\n    /* \"#utility.yul\":6847:6853   */\n  dup3\n    /* \"#utility.yul\":6836:6845   */\n  dup8\n    /* \"#utility.yul\":6832:6854   */\n  add\n    /* \"#utility.yul\":6750:6864   */\n  tag_68\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6740:6864   */\n  swap2\n  pop\n    /* \"#utility.yul\":6542:6874   */\n  pop\n    /* \"#utility.yul\":5949:6881   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":6887:7067   */\ntag_11:\n    /* \"#utility.yul\":6935:7012   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6932:6933   */\n  0x00\n    /* \"#utility.yul\":6925:7013   */\n  mstore\n    /* \"#utility.yul\":7032:7036   */\n  0x32\n    /* \"#utility.yul\":7029:7030   */\n  0x04\n    /* \"#utility.yul\":7022:7037   */\n  mstore\n    /* \"#utility.yul\":7056:7060   */\n  0x24\n    /* \"#utility.yul\":7053:7054   */\n  0x00\n    /* \"#utility.yul\":7046:7061   */\n  revert\n    /* \"#utility.yul\":7073:7253   */\ntag_69:\n    /* \"#utility.yul\":7121:7198   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7118:7119   */\n  0x00\n    /* \"#utility.yul\":7111:7199   */\n  mstore\n    /* \"#utility.yul\":7218:7222   */\n  0x11\n    /* \"#utility.yul\":7215:7216   */\n  0x04\n    /* \"#utility.yul\":7208:7223   */\n  mstore\n    /* \"#utility.yul\":7242:7246   */\n  0x24\n    /* \"#utility.yul\":7239:7240   */\n  0x00\n    /* \"#utility.yul\":7232:7247   */\n  revert\n    /* \"#utility.yul\":7259:7492   */\ntag_14:\n    /* \"#utility.yul\":7298:7301   */\n  0x00\n    /* \"#utility.yul\":7321:7345   */\n  tag_148\n    /* \"#utility.yul\":7339:7344   */\n  dup3\n    /* \"#utility.yul\":7321:7345   */\n  tag_61\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7312:7345   */\n  swap2\n  pop\n    /* \"#utility.yul\":7367:7433   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7360:7365   */\n  dup3\n    /* \"#utility.yul\":7357:7434   */\n  sub\n    /* \"#utility.yul\":7354:7457   */\n  tag_149\n  jumpi\n    /* \"#utility.yul\":7437:7455   */\n  tag_150\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7354:7457   */\ntag_149:\n    /* \"#utility.yul\":7484:7485   */\n  0x01\n    /* \"#utility.yul\":7477:7482   */\n  dup3\n    /* \"#utility.yul\":7473:7486   */\n  add\n    /* \"#utility.yul\":7466:7486   */\n  swap1\n  pop\n    /* \"#utility.yul\":7259:7492   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7498:7678   */\ntag_17:\n    /* \"#utility.yul\":7546:7623   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7543:7544   */\n  0x00\n    /* \"#utility.yul\":7536:7624   */\n  mstore\n    /* \"#utility.yul\":7643:7647   */\n  0x21\n    /* \"#utility.yul\":7640:7641   */\n  0x04\n    /* \"#utility.yul\":7633:7648   */\n  mstore\n    /* \"#utility.yul\":7667:7671   */\n  0x24\n    /* \"#utility.yul\":7664:7665   */\n  0x00\n    /* \"#utility.yul\":7657:7672   */\n  revert\n    /* \"Order.sol\":763:3382  contract Order {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Order.sol\":763:3382  contract Order {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1865c57d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"Order.sol\":3310:3341  Received(msg.sender, msg.value) */\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n        /* \"Order.sol\":3319:3329  msg.sender */\n      caller\n        /* \"Order.sol\":3331:3340  msg.value */\n      callvalue\n        /* \"Order.sol\":3310:3341  Received(msg.sender, msg.value) */\n      mload(0x40)\n      tag_10\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Order.sol\":3363:3372  msg.value */\n      callvalue\n        /* \"Order.sol\":3351:3359  _balance */\n      0x02\n      0x00\n        /* \"Order.sol\":3351:3372  _balance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"Order.sol\":763:3382  contract Order {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Order.sol\":2880:2961  function getBalance() public view returns (uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Order.sol\":2792:2875  function getState() public view returns (OrderState) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Order.sol\":3092:3262  function withdraw() public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Order.sol\":2707:2787  function getOwner() public view returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Order.sol\":2989:3087  function cancel() public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Order.sol\":2880:2961  function getBalance() public view returns (uint) {... */\n    tag_16:\n        /* \"Order.sol\":2923:2927  uint */\n      0x00\n        /* \"Order.sol\":2946:2954  _balance */\n      sload(0x02)\n        /* \"Order.sol\":2939:2954  return _balance */\n      swap1\n      pop\n        /* \"Order.sol\":2880:2961  function getBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Order.sol\":2792:2875  function getState() public view returns (OrderState) {... */\n    tag_21:\n        /* \"Order.sol\":2833:2843  OrderState */\n      0x00\n        /* \"Order.sol\":2862:2868  _state */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Order.sol\":2855:2868  return _state */\n      swap1\n      pop\n        /* \"Order.sol\":2792:2875  function getState() public view returns (OrderState) {... */\n      swap1\n      jump\t// out\n        /* \"Order.sol\":3092:3262  function withdraw() public {... */\n    tag_26:\n      jump\t// out\n        /* \"Order.sol\":2707:2787  function getOwner() public view returns (address) {... */\n    tag_29:\n        /* \"Order.sol\":2748:2755  address */\n      0x00\n        /* \"Order.sol\":2774:2780  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Order.sol\":2767:2780  return _owner */\n      swap1\n      pop\n        /* \"Order.sol\":2707:2787  function getOwner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Order.sol\":2989:3087  function cancel() public {... */\n    tag_34:\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_40:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_41:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_54\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_40\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_42:\n        /* \"#utility.yul\":328:352   */\n      tag_56\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_41\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:442   */\n    tag_43:\n        /* \"#utility.yul\":402:409   */\n      0x00\n        /* \"#utility.yul\":431:436   */\n      dup2\n        /* \"#utility.yul\":420:436   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":448:566   */\n    tag_44:\n        /* \"#utility.yul\":535:559   */\n      tag_59\n        /* \"#utility.yul\":553:558   */\n      dup2\n        /* \"#utility.yul\":535:559   */\n      tag_43\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":530:533   */\n      dup3\n        /* \"#utility.yul\":523:560   */\n      mstore\n        /* \"#utility.yul\":448:566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:904   */\n    tag_11:\n        /* \"#utility.yul\":693:697   */\n      0x00\n        /* \"#utility.yul\":731:733   */\n      0x40\n        /* \"#utility.yul\":720:729   */\n      dup3\n        /* \"#utility.yul\":716:734   */\n      add\n        /* \"#utility.yul\":708:734   */\n      swap1\n      pop\n        /* \"#utility.yul\":744:815   */\n      tag_61\n        /* \"#utility.yul\":812:813   */\n      0x00\n        /* \"#utility.yul\":801:810   */\n      dup4\n        /* \"#utility.yul\":797:814   */\n      add\n        /* \"#utility.yul\":788:794   */\n      dup6\n        /* \"#utility.yul\":744:815   */\n      tag_42\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":825:897   */\n      tag_62\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":882:891   */\n      dup4\n        /* \"#utility.yul\":878:896   */\n      add\n        /* \"#utility.yul\":869:875   */\n      dup5\n        /* \"#utility.yul\":825:897   */\n      tag_44\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":572:904   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":910:1090   */\n    tag_45:\n        /* \"#utility.yul\":958:1035   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":955:956   */\n      0x00\n        /* \"#utility.yul\":948:1036   */\n      mstore\n        /* \"#utility.yul\":1055:1059   */\n      0x11\n        /* \"#utility.yul\":1052:1053   */\n      0x04\n        /* \"#utility.yul\":1045:1060   */\n      mstore\n        /* \"#utility.yul\":1079:1083   */\n      0x24\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1069:1084   */\n      revert\n        /* \"#utility.yul\":1096:1287   */\n    tag_13:\n        /* \"#utility.yul\":1136:1139   */\n      0x00\n        /* \"#utility.yul\":1155:1175   */\n      tag_65\n        /* \"#utility.yul\":1173:1174   */\n      dup3\n        /* \"#utility.yul\":1155:1175   */\n      tag_43\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1150:1175   */\n      swap2\n      pop\n        /* \"#utility.yul\":1189:1209   */\n      tag_66\n        /* \"#utility.yul\":1207:1208   */\n      dup4\n        /* \"#utility.yul\":1189:1209   */\n      tag_43\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1184:1209   */\n      swap3\n      pop\n        /* \"#utility.yul\":1232:1233   */\n      dup3\n        /* \"#utility.yul\":1229:1230   */\n      dup3\n        /* \"#utility.yul\":1225:1234   */\n      add\n        /* \"#utility.yul\":1218:1234   */\n      swap1\n      pop\n        /* \"#utility.yul\":1253:1256   */\n      dup1\n        /* \"#utility.yul\":1250:1251   */\n      dup3\n        /* \"#utility.yul\":1247:1257   */\n      gt\n        /* \"#utility.yul\":1244:1280   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1260:1278   */\n      tag_68\n      tag_45\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1244:1280   */\n    tag_67:\n        /* \"#utility.yul\":1096:1287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1293:1515   */\n    tag_18:\n        /* \"#utility.yul\":1386:1390   */\n      0x00\n        /* \"#utility.yul\":1424:1426   */\n      0x20\n        /* \"#utility.yul\":1413:1422   */\n      dup3\n        /* \"#utility.yul\":1409:1427   */\n      add\n        /* \"#utility.yul\":1401:1427   */\n      swap1\n      pop\n        /* \"#utility.yul\":1437:1508   */\n      tag_70\n        /* \"#utility.yul\":1505:1506   */\n      0x00\n        /* \"#utility.yul\":1494:1503   */\n      dup4\n        /* \"#utility.yul\":1490:1507   */\n      add\n        /* \"#utility.yul\":1481:1487   */\n      dup5\n        /* \"#utility.yul\":1437:1508   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1293:1515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1701   */\n    tag_46:\n        /* \"#utility.yul\":1569:1646   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1559:1647   */\n      mstore\n        /* \"#utility.yul\":1666:1670   */\n      0x21\n        /* \"#utility.yul\":1663:1664   */\n      0x04\n        /* \"#utility.yul\":1656:1671   */\n      mstore\n        /* \"#utility.yul\":1690:1694   */\n      0x24\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1680:1695   */\n      revert\n        /* \"#utility.yul\":1707:1825   */\n    tag_47:\n        /* \"#utility.yul\":1793:1794   */\n      0x04\n        /* \"#utility.yul\":1786:1791   */\n      dup2\n        /* \"#utility.yul\":1783:1795   */\n      lt\n        /* \"#utility.yul\":1773:1819   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1799:1817   */\n      tag_74\n      tag_46\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1773:1819   */\n    tag_73:\n        /* \"#utility.yul\":1707:1825   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1968   */\n    tag_48:\n        /* \"#utility.yul\":1881:1888   */\n      0x00\n        /* \"#utility.yul\":1910:1915   */\n      dup2\n        /* \"#utility.yul\":1899:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1916:1962   */\n      tag_76\n        /* \"#utility.yul\":1956:1961   */\n      dup3\n        /* \"#utility.yul\":1916:1962   */\n      tag_47\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1831:1968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1974:2111   */\n    tag_49:\n        /* \"#utility.yul\":2035:2044   */\n      0x00\n        /* \"#utility.yul\":2068:2105   */\n      tag_78\n        /* \"#utility.yul\":2099:2104   */\n      dup3\n        /* \"#utility.yul\":2068:2105   */\n      tag_48\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2055:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":1974:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2270   */\n    tag_50:\n        /* \"#utility.yul\":2215:2263   */\n      tag_80\n        /* \"#utility.yul\":2257:2262   */\n      dup2\n        /* \"#utility.yul\":2215:2263   */\n      tag_49\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2210:2213   */\n      dup3\n        /* \"#utility.yul\":2203:2264   */\n      mstore\n        /* \"#utility.yul\":2117:2270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2520   */\n    tag_23:\n        /* \"#utility.yul\":2380:2384   */\n      0x00\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2407:2416   */\n      dup3\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"#utility.yul\":2395:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2431:2513   */\n      tag_82\n        /* \"#utility.yul\":2510:2511   */\n      0x00\n        /* \"#utility.yul\":2499:2508   */\n      dup4\n        /* \"#utility.yul\":2495:2512   */\n      add\n        /* \"#utility.yul\":2486:2492   */\n      dup5\n        /* \"#utility.yul\":2431:2513   */\n      tag_50\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2276:2520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2748   */\n    tag_31:\n        /* \"#utility.yul\":2619:2623   */\n      0x00\n        /* \"#utility.yul\":2657:2659   */\n      0x20\n        /* \"#utility.yul\":2646:2655   */\n      dup3\n        /* \"#utility.yul\":2642:2660   */\n      add\n        /* \"#utility.yul\":2634:2660   */\n      swap1\n      pop\n        /* \"#utility.yul\":2670:2741   */\n      tag_84\n        /* \"#utility.yul\":2738:2739   */\n      0x00\n        /* \"#utility.yul\":2727:2736   */\n      dup4\n        /* \"#utility.yul\":2723:2740   */\n      add\n        /* \"#utility.yul\":2714:2720   */\n      dup5\n        /* \"#utility.yul\":2670:2741   */\n      tag_42\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2526:2748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fd7adc61a777c86b773b4f7252dfeee4a8f267b70103e0042fea835ac2d1480c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLeg_177": {
									"entryPoint": 330,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@submit_142": {
									"entryPoint": 676,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validateBuyLeg_138": {
									"entryPoint": 681,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@validateSellLeg_131": {
									"entryPoint": 678,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_TradeSide_$88_fromMemory": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_OrderLeg_$100_memory_ptr_fromMemory": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_payablet_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 1723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_TradeSide_$88": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7681:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "937:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "919:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "908:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "880:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "890:7:2",
														"type": ""
													}
												],
												"src": "845:104:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1006:87:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1071:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1083:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1073:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1073:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1073:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1062:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1036:25:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:32:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1026:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:43:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1019:51:2"
															},
															"nodeType": "YulIf",
															"src": "1016:71:2"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "999:5:2",
														"type": ""
													}
												],
												"src": "955:138:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1170:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1180:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1195:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1189:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1180:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1246:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1211:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1211:41:2"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1148:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1156:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1164:5:2",
														"type": ""
													}
												],
												"src": "1099:159:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1353:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1363:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1264:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1435:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1445:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1470:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1459:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1459:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1479:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1475:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1455:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1418:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1428:6:2",
														"type": ""
													}
												],
												"src": "1387:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1630:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1630:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1630:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1664:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1654:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1654:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1495:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1724:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1734:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1786:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1764:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1738:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1903:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1905:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1846:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1882:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1879:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1879:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1840:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:62:2"
															},
															"nodeType": "YulIf",
															"src": "1837:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1945:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1934:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1934:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1710:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1718:4:2",
														"type": ""
													}
												],
												"src": "1681:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2009:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2029:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2029:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2086:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2058:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2058:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1993:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2002:6:2",
														"type": ""
													}
												],
												"src": "1968:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2210:229:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2315:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2287:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:30:2"
															},
															"nodeType": "YulIf",
															"src": "2281:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2347:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2359:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2367:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2355:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:17:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2347:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2409:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2421:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2427:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2417:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2409:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2194:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2205:4:2",
														"type": ""
													}
												],
												"src": "2103:336:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2534:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2551:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2544:12:2"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2445:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2657:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2667:12:2"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "2568:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2780:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2790:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2790:12:2"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "2691:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2859:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2869:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2880:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2869:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2841:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2851:7:2",
														"type": ""
													}
												],
												"src": "2814:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2997:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3006:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3009:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2999:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2999:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2963:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2988:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2970:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2970:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2960:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2960:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2953:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:43:2"
															},
															"nodeType": "YulIf",
															"src": "2950:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2933:5:2",
														"type": ""
													}
												],
												"src": "2897:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3088:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3098:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3113:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3107:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3098:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3156:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3129:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3129:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3066:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3074:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3082:5:2",
														"type": ""
													}
												],
												"src": "3025:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3229:56:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3263:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3272:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3275:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3265:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3265:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3252:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3259:1:2",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3249:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:12:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:20:2"
															},
															"nodeType": "YulIf",
															"src": "3239:40:2"
														}
													]
												},
												"name": "validator_revert_t_enum$_TradeSide_$88",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3222:5:2",
														"type": ""
													}
												],
												"src": "3174:111:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3366:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3376:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3391:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3385:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3376:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3446:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_TradeSide_$88",
																	"nodeType": "YulIdentifier",
																	"src": "3407:38:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3407:45:2"
														}
													]
												},
												"name": "abi_decode_t_enum$_TradeSide_$88_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3344:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3352:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3360:5:2",
														"type": ""
													}
												],
												"src": "3291:167:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3578:1061:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3622:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "3624:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3624:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3624:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3599:3:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:19:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3591:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:30:2"
															},
															"nodeType": "YulIf",
															"src": "3588:117:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3714:30:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3739:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3723:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:21:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3714:5:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3754:162:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3790:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3794:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3830:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3837:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3826:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3880:9:2"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3891:6:2"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3876:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3876:22:2"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3900:3:2"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "3844:31:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3844:60:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3819:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3819:86:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3819:86:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3926:166:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3965:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3979:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3969:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4006:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4013:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:16:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4056:9:2"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4067:6:2"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4052:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4052:22:2"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4076:3:2"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "4020:31:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4020:60:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3995:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3995:86:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3995:86:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4102:167:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4142:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4146:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4183:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4190:4:2",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4179:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4179:16:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4233:9:2"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4244:6:2"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4229:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4229:22:2"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4253:3:2"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "4197:31:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4197:60:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4172:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4172:86:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4172:86:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4279:168:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4320:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4334:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4324:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4361:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4368:4:2",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4357:16:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4411:9:2"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4422:6:2"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4407:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4407:22:2"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4431:3:2"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "4375:31:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4375:60:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4350:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4350:86:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4350:86:2"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4457:175:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4492:17:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:3:2",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4496:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4534:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4541:4:2",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4530:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4530:16:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4596:9:2"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4607:6:2"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4592:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4592:22:2"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4616:3:2"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_enum$_TradeSide_$88_fromMemory",
																					"nodeType": "YulIdentifier",
																					"src": "4548:43:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4548:72:2"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4523:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4523:98:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4523:98:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_OrderLeg_$100_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3553:9:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3564:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3572:5:2",
														"type": ""
													}
												],
												"src": "3487:1152:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4808:669:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4818:115:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4925:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4843:81:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4843:89:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4827:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:106:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4818:5:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4942:16:2",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4953:5:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4946:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4975:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4982:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4968:21:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4998:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5016:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:16:2"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4998:3:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5031:44:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5049:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5061:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5069:4:2",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5057:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5057:17:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5045:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5045:30:2"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5035:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5103:103:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "5117:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5117:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5117:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5090:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5098:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5087:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:15:2"
															},
															"nodeType": "YulIf",
															"src": "5084:122:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5291:180:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5306:21:2",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:2"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "5310:10:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5348:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "5410:10:2"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "5422:3:2"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_OrderLeg_$100_memory_ptr_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "5353:56:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5353:73:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5341:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5341:86:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5341:86:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5440:21:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5451:3:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5456:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5447:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5447:14:2"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5440:3:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5244:3:2"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5241:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:15:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5257:25:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5259:21:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5270:3:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5275:4:2",
																					"type": "",
																					"value": "0xa0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5266:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5266:14:2"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5259:3:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5219:21:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5221:17:2",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "5232:6:2"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "5225:3:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5215:256:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4778:6:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4786:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4794:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4802:5:2",
														"type": ""
													}
												],
												"src": "4670:807:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5621:322:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5670:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5672:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5672:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5672:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5649:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5657:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5645:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5645:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5664:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:35:2"
															},
															"nodeType": "YulIf",
															"src": "5631:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5762:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5782:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5776:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5766:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5798:139:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5910:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5918:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5906:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5925:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5933:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5807:98:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:130:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5798:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5599:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5607:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5615:5:2",
														"type": ""
													}
												],
												"src": "5508:435:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6118:763:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6164:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6166:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6166:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6166:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6139:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6148:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6135:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6135:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6160:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6131:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6131:32:2"
															},
															"nodeType": "YulIf",
															"src": "6128:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "6257:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6272:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6286:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6276:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6301:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6347:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6358:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6343:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6343:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6367:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6311:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6311:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6301:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6395:137:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6410:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6424:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6414:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6440:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6494:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6505:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6490:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6490:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6514:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6450:39:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6450:72:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6440:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6542:332:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6557:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6581:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6592:2:2",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6577:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6571:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6561:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6643:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6645:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6645:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6645:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6615:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6623:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6612:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6612:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "6609:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6740:124:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6836:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6847:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6832:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6832:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6856:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6750:81:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:114:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6740:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_payablet_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6072:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6083:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6095:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6103:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6111:6:2",
														"type": ""
													}
												],
												"src": "5949:932:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6915:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6932:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6935:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7029:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7032:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7022:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7056:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7046:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7046:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6887:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7101:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7118:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7121:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7111:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7111:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7215:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7218:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7208:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7208:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7208:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7239:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7242:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7232:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7232:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7073:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7302:190:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7312:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7339:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7321:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7312:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7435:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7437:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7437:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7437:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7360:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7367:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7357:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:77:2"
															},
															"nodeType": "YulIf",
															"src": "7354:103:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7466:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7477:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7484:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7473:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7473:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7466:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7288:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7298:3:2",
														"type": ""
													}
												],
												"src": "7259:233:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7526:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7543:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7546:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7536:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7536:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7640:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:4:2",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7633:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7633:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7664:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7667:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7657:15:2"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7498:180:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_enum$_TradeSide_$88(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_TradeSide_$88_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_TradeSide_$88(value)\n    }\n\n    // struct OrderLeg\n    function abi_decode_t_struct$_OrderLeg_$100_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // token\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // quantity\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // price_low\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // price_high\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // side\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_enum$_TradeSide_$88_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct OrderLeg[]\n    function abi_decode_available_length_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0xa0))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0xa0) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_OrderLeg_$100_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct OrderLeg[]\n    function abi_decode_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_address_payablet_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405162000ad438038062000ad48339818101604052810190620000299190620005e2565b60005b81518110156200007a576200006482828151811062000050576200004f6200065d565b5b60200260200101516200014a60201b60201c565b80806200007190620006bb565b9150506200002c565b50826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346002819055506000600460006101000a81548160ff021916908360038111156200012c576200012b62000708565b5b021790555062000141620002a460201b60201c565b50505062000737565b60018081111562000160576200015f62000708565b5b816080015160018111156200017a576200017962000708565b5b0362000192576200019181620002a660201b60201c565b5b60006001811115620001a957620001a862000708565b5b81608001516001811115620001c357620001c262000708565b5b03620001db57620001da81620002a960201b60201c565b5b600581908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908360018111156200029a576200029962000708565b5b0217905550505050565b565b50565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002ed82620002c0565b9050919050565b620002ff81620002e0565b81146200030b57600080fd5b50565b6000815190506200031f81620002f4565b92915050565b60006200033282620002c0565b9050919050565b620003448162000325565b81146200035057600080fd5b50565b600081519050620003648162000339565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003ba826200036f565b810181811067ffffffffffffffff82111715620003dc57620003db62000380565b5b80604052505050565b6000620003f1620002ac565b9050620003ff8282620003af565b919050565b600067ffffffffffffffff82111562000422576200042162000380565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b62000452816200043d565b81146200045e57600080fd5b50565b600081519050620004728162000447565b92915050565b600281106200048657600080fd5b50565b6000815190506200049a8162000478565b92915050565b600060a08284031215620004b957620004b862000438565b5b620004c560a0620003e5565b90506000620004d7848285016200030e565b6000830152506020620004ed8482850162000461565b6020830152506040620005038482850162000461565b6040830152506060620005198482850162000461565b60608301525060806200052f8482850162000489565b60808301525092915050565b6000620005526200054c8462000404565b620003e5565b90508083825260208201905060a0840283018581111562000578576200057762000433565b5b835b81811015620005a55780620005908882620004a0565b84526020840193505060a0810190506200057a565b5050509392505050565b600082601f830112620005c757620005c66200036a565b5b8151620005d98482602086016200053b565b91505092915050565b600080600060608486031215620005fe57620005fd620002b6565b5b60006200060e868287016200030e565b9350506020620006218682870162000353565b925050604084015167ffffffffffffffff811115620006455762000644620002bb565b5b6200065386828701620005af565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006c8826200043d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620006fd57620006fc6200068c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61038d80620007476000396000f3fe60806040526004361061004e5760003560e01c806312065fe0146100ab5780631865c57d146100d65780633ccfd60b14610101578063893d20e814610118578063ea8a1af014610143576100a6565b366100a6577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258743334604051610084929190610203565b60405180910390a1346002600082825461009e919061025b565b925050819055005b600080fd5b3480156100b757600080fd5b506100c061015a565b6040516100cd919061028f565b60405180910390f35b3480156100e257600080fd5b506100eb610164565b6040516100f89190610321565b60405180910390f35b34801561010d57600080fd5b5061011661017b565b005b34801561012457600080fd5b5061012d61017d565b60405161013a919061033c565b60405180910390f35b34801561014f57600080fd5b506101586101a7565b005b6000600254905090565b6000600460009054906101000a900460ff16905090565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d4826101a9565b9050919050565b6101e4816101c9565b82525050565b6000819050919050565b6101fd816101ea565b82525050565b600060408201905061021860008301856101db565b61022560208301846101f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610266826101ea565b9150610271836101ea565b92508282019050808211156102895761028861022c565b5b92915050565b60006020820190506102a460008301846101f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106102ea576102e96102aa565b5b50565b60008190506102fb826102d9565b919050565b600061030b826102ed565b9050919050565b61031b81610300565b82525050565b60006020820190506103366000830184610312565b92915050565b600060208201905061035160008301846101db565b9291505056fea2646970667358221220fd7adc61a777c86b773b4f7252dfeee4a8f267b70103e0042fea835ac2d1480c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xAD4 CODESIZE SUB DUP1 PUSH3 0xAD4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x5E2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x7A JUMPI PUSH3 0x64 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x50 JUMPI PUSH3 0x4F PUSH3 0x65D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x14A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 DUP1 PUSH3 0x71 SWAP1 PUSH3 0x6BB JUMP JUMPDEST SWAP2 POP POP PUSH3 0x2C JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH3 0x12B PUSH3 0x708 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x141 PUSH3 0x2A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x737 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH3 0x160 JUMPI PUSH3 0x15F PUSH3 0x708 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x17A JUMPI PUSH3 0x179 PUSH3 0x708 JUMP JUMPDEST JUMPDEST SUB PUSH3 0x192 JUMPI PUSH3 0x191 DUP2 PUSH3 0x2A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x1A9 JUMPI PUSH3 0x1A8 PUSH3 0x708 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x1C3 JUMPI PUSH3 0x1C2 PUSH3 0x708 JUMP JUMPDEST JUMPDEST SUB PUSH3 0x1DB JUMPI PUSH3 0x1DA DUP2 PUSH3 0x2A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x29A JUMPI PUSH3 0x299 PUSH3 0x708 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2ED DUP3 PUSH3 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FF DUP2 PUSH3 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH3 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x31F DUP2 PUSH3 0x2F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x332 DUP3 PUSH3 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x344 DUP2 PUSH3 0x325 JUMP JUMPDEST DUP2 EQ PUSH3 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x364 DUP2 PUSH3 0x339 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x3BA DUP3 PUSH3 0x36F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3DC JUMPI PUSH3 0x3DB PUSH3 0x380 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F1 PUSH3 0x2AC JUMP JUMPDEST SWAP1 POP PUSH3 0x3FF DUP3 DUP3 PUSH3 0x3AF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x422 JUMPI PUSH3 0x421 PUSH3 0x380 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x452 DUP2 PUSH3 0x43D JUMP JUMPDEST DUP2 EQ PUSH3 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x472 DUP2 PUSH3 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x49A DUP2 PUSH3 0x478 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4B9 JUMPI PUSH3 0x4B8 PUSH3 0x438 JUMP JUMPDEST JUMPDEST PUSH3 0x4C5 PUSH1 0xA0 PUSH3 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x4D7 DUP5 DUP3 DUP6 ADD PUSH3 0x30E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH3 0x4ED DUP5 DUP3 DUP6 ADD PUSH3 0x461 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH3 0x503 DUP5 DUP3 DUP6 ADD PUSH3 0x461 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH3 0x519 DUP5 DUP3 DUP6 ADD PUSH3 0x461 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH3 0x52F DUP5 DUP3 DUP6 ADD PUSH3 0x489 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x552 PUSH3 0x54C DUP5 PUSH3 0x404 JUMP JUMPDEST PUSH3 0x3E5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x578 JUMPI PUSH3 0x577 PUSH3 0x433 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5A5 JUMPI DUP1 PUSH3 0x590 DUP9 DUP3 PUSH3 0x4A0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH3 0x57A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5C7 JUMPI PUSH3 0x5C6 PUSH3 0x36A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x5D9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x53B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x5FE JUMPI PUSH3 0x5FD PUSH3 0x2B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x60E DUP7 DUP3 DUP8 ADD PUSH3 0x30E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x621 DUP7 DUP3 DUP8 ADD PUSH3 0x353 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x645 JUMPI PUSH3 0x644 PUSH3 0x2BB JUMP JUMPDEST JUMPDEST PUSH3 0x653 DUP7 DUP3 DUP8 ADD PUSH3 0x5AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x6C8 DUP3 PUSH3 0x43D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0x6FD JUMPI PUSH3 0x6FC PUSH3 0x68C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x38D DUP1 PUSH3 0x747 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x143 JUMPI PUSH2 0xA6 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA6 JUMPI PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x84 SWAP3 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x25B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x1A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4 DUP3 PUSH2 0x1A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x1C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FD DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x218 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x225 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x266 DUP3 PUSH2 0x1EA JUMP JUMPDEST SWAP2 POP PUSH2 0x271 DUP4 PUSH2 0x1EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x22C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2EA JUMPI PUSH2 0x2E9 PUSH2 0x2AA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2FB DUP3 PUSH2 0x2D9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31B DUP2 PUSH2 0x300 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x336 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x351 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH27 0xDC61A777C86B773B4F7252DFEEE4A8F267B70103E0042FEA835AC2 0xD1 BASEFEE 0xC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "763:2619:1:-:0;;;2171:508;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2340:6;2335:78;2356:4;:11;2352:1;:15;2335:78;;;2387:15;2394:4;2399:1;2394:7;;;;;;;;:::i;:::-;;;;;;;;2387:6;;;:15;;:::i;:::-;2369:3;;;;;:::i;:::-;;;;2335:78;;;;2504:8;2492:9;;:20;;;;;;;;;;;;;;;;;;2531:5;2522:6;;:14;;;;;;;;;;;;;;;;;;2557:9;2546:8;:20;;;;2585;2576:6;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2664:8;:6;;;:8;;:::i;:::-;2171:508;;;763:2619;;1882:283;1988:14;1976:26;;;;;;;;:::i;:::-;;:3;:8;;;:26;;;;;;;;:::i;:::-;;;1972:77;;2018:20;2034:3;2018:15;;;:20;;:::i;:::-;1972:77;2074:13;2062:25;;;;;;;;:::i;:::-;;:3;:8;;;:25;;;;;;;;:::i;:::-;;;2058:75;;2103:19;2118:3;2103:14;;;:19;;:::i;:::-;2058:75;2143:5;2154:3;2143:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1882:283;:::o;1752:124::-;:::o;1335:205::-;;:::o;1545:202::-;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:104::-;890:7;919:24;937:5;919:24;:::i;:::-;908:35;;845:104;;;:::o;955:138::-;1036:32;1062:5;1036:32;:::i;:::-;1029:5;1026:43;1016:71;;1083:1;1080;1073:12;1016:71;955:138;:::o;1099:159::-;1164:5;1195:6;1189:13;1180:22;;1211:41;1246:5;1211:41;:::i;:::-;1099:159;;;;:::o;1264:117::-;1373:1;1370;1363:12;1387:102;1428:6;1479:2;1475:7;1470:2;1463:5;1459:14;1455:28;1445:38;;1387:102;;;:::o;1495:180::-;1543:77;1540:1;1533:88;1640:4;1637:1;1630:15;1664:4;1661:1;1654:15;1681:281;1764:27;1786:4;1764:27;:::i;:::-;1756:6;1752:40;1894:6;1882:10;1879:22;1858:18;1846:10;1843:34;1840:62;1837:88;;;1905:18;;:::i;:::-;1837:88;1945:10;1941:2;1934:22;1724:238;1681:281;;:::o;1968:129::-;2002:6;2029:20;;:::i;:::-;2019:30;;2058:33;2086:4;2078:6;2058:33;:::i;:::-;1968:129;;;:::o;2103:336::-;2205:4;2295:18;2287:6;2284:30;2281:56;;;2317:18;;:::i;:::-;2281:56;2367:4;2359:6;2355:17;2347:25;;2427:4;2421;2417:15;2409:23;;2103:336;;;:::o;2445:117::-;2554:1;2551;2544:12;2568:117;2677:1;2674;2667:12;2814:77;2851:7;2880:5;2869:16;;2814:77;;;:::o;2897:122::-;2970:24;2988:5;2970:24;:::i;:::-;2963:5;2960:35;2950:63;;3009:1;3006;2999:12;2950:63;2897:122;:::o;3025:143::-;3082:5;3113:6;3107:13;3098:22;;3129:33;3156:5;3129:33;:::i;:::-;3025:143;;;;:::o;3174:111::-;3259:1;3252:5;3249:12;3239:40;;3275:1;3272;3265:12;3239:40;3174:111;:::o;3291:167::-;3360:5;3391:6;3385:13;3376:22;;3407:45;3446:5;3407:45;:::i;:::-;3291:167;;;;:::o;3487:1152::-;3572:5;3616:4;3604:9;3599:3;3595:19;3591:30;3588:117;;;3624:79;;:::i;:::-;3588:117;3723:21;3739:4;3723:21;:::i;:::-;3714:30;;3804:1;3844:60;3900:3;3891:6;3880:9;3876:22;3844:60;:::i;:::-;3837:4;3830:5;3826:16;3819:86;3754:162;3979:2;4020:60;4076:3;4067:6;4056:9;4052:22;4020:60;:::i;:::-;4013:4;4006:5;4002:16;3995:86;3926:166;4156:2;4197:60;4253:3;4244:6;4233:9;4229:22;4197:60;:::i;:::-;4190:4;4183:5;4179:16;4172:86;4102:167;4334:2;4375:60;4431:3;4422:6;4411:9;4407:22;4375:60;:::i;:::-;4368:4;4361:5;4357:16;4350:86;4279:168;4506:3;4548:72;4616:3;4607:6;4596:9;4592:22;4548:72;:::i;:::-;4541:4;4534:5;4530:16;4523:98;4457:175;3487:1152;;;;:::o;4670:807::-;4802:5;4827:106;4843:89;4925:6;4843:89;:::i;:::-;4827:106;:::i;:::-;4818:115;;4953:5;4982:6;4975:5;4968:21;5016:4;5009:5;5005:16;4998:23;;5069:4;5061:6;5057:17;5049:6;5045:30;5098:3;5090:6;5087:15;5084:122;;;5117:79;;:::i;:::-;5084:122;5232:6;5215:256;5249:6;5244:3;5241:15;5215:256;;;5324:3;5353:73;5422:3;5410:10;5353:73;:::i;:::-;5348:3;5341:86;5456:4;5451:3;5447:14;5440:21;;5291:180;5275:4;5270:3;5266:14;5259:21;;5215:256;;;5219:21;4808:669;;4670:807;;;;;:::o;5508:435::-;5615:5;5664:3;5657:4;5649:6;5645:17;5641:27;5631:122;;5672:79;;:::i;:::-;5631:122;5782:6;5776:13;5807:130;5933:3;5925:6;5918:4;5910:6;5906:17;5807:130;:::i;:::-;5798:139;;5621:322;5508:435;;;;:::o;5949:932::-;6095:6;6103;6111;6160:2;6148:9;6139:7;6135:23;6131:32;6128:119;;;6166:79;;:::i;:::-;6128:119;6286:1;6311:64;6367:7;6358:6;6347:9;6343:22;6311:64;:::i;:::-;6301:74;;6257:128;6424:2;6450:72;6514:7;6505:6;6494:9;6490:22;6450:72;:::i;:::-;6440:82;;6395:137;6592:2;6581:9;6577:18;6571:25;6623:18;6615:6;6612:30;6609:117;;;6645:79;;:::i;:::-;6609:117;6750:114;6856:7;6847:6;6836:9;6832:22;6750:114;:::i;:::-;6740:124;;6542:332;5949:932;;;;;:::o;6887:180::-;6935:77;6932:1;6925:88;7032:4;7029:1;7022:15;7056:4;7053:1;7046:15;7073:180;7121:77;7118:1;7111:88;7218:4;7215:1;7208:15;7242:4;7239:1;7232:15;7259:233;7298:3;7321:24;7339:5;7321:24;:::i;:::-;7312:33;;7367:66;7360:5;7357:77;7354:103;;7437:18;;:::i;:::-;7354:103;7484:1;7477:5;7473:13;7466:20;;7259:233;;;:::o;7498:180::-;7546:77;7543:1;7536:88;7643:4;7640:1;7633:15;7667:4;7664:1;7657:15;763:2619:1;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cancel_258": {
									"entryPoint": 423,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_254": {
									"entryPoint": 346,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwner_237": {
									"entryPoint": 381,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getState_246": {
									"entryPoint": 356,
									"id": 246,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@withdraw_262": {
									"entryPoint": 379,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_OrderState_$85_to_t_uint8_fromStack": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_OrderState_$85__to_t_uint8__fromStack_reversed": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_OrderState_$85": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_OrderState_$85_to_t_uint8": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_OrderState_$85": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2751:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "431:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "420:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "392:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "402:7:2",
														"type": ""
													}
												],
												"src": "365:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "513:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "530:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "535:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "508:3:2",
														"type": ""
													}
												],
												"src": "448:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "708:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "720:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "708:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "788:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "812:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "744:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "869:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "882:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "893:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "878:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "825:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "825:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "662:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "674:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "682:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "693:4:2",
														"type": ""
													}
												],
												"src": "572:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "938:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "955:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "948:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1052:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1055:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1045:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1045:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1045:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1076:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1079:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1069:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1069:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "910:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1140:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1150:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1173:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1155:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1150:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1184:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1207:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1189:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1184:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1218:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1229:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1232:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1260:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1250:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1253:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1247:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:10:2"
															},
															"nodeType": "YulIf",
															"src": "1244:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1127:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1130:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1136:3:2",
														"type": ""
													}
												],
												"src": "1096:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1391:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1401:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1413:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1424:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1401:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1481:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1494:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1505:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1490:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1437:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1437:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1363:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1375:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1386:4:2",
														"type": ""
													}
												],
												"src": "1293:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1549:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1566:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1569:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1559:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1559:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1666:4:2",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1656:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:15:2"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "1521:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1763:62:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1797:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "1799:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1786:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1793:1:2",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1783:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1783:12:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:20:2"
															},
															"nodeType": "YulIf",
															"src": "1773:46:2"
														}
													]
												},
												"name": "validator_assert_t_enum$_OrderState_$85",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1756:5:2",
														"type": ""
													}
												],
												"src": "1707:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1899:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1910:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1899:7:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1956:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_OrderState_$85",
																	"nodeType": "YulIdentifier",
																	"src": "1916:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1916:46:2"
														}
													]
												},
												"name": "cleanup_t_enum$_OrderState_$85",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1871:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1881:7:2",
														"type": ""
													}
												],
												"src": "1831:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2045:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2055:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2099:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_OrderState_$85",
																	"nodeType": "YulIdentifier",
																	"src": "2068:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2055:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_OrderState_$85_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2025:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2035:9:2",
														"type": ""
													}
												],
												"src": "1974:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2193:77:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2210:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2257:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_OrderState_$85_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2215:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2215:48:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:61:2"
														}
													]
												},
												"name": "abi_encode_t_enum$_OrderState_$85_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2181:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2188:3:2",
														"type": ""
													}
												],
												"src": "2117:153:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2385:135:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2395:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2486:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2499:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2510:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2495:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_OrderState_$85_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2431:54:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:82:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2431:82:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_OrderState_$85__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2357:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2369:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2380:4:2",
														"type": ""
													}
												],
												"src": "2276:244:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2634:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2646:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2657:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2642:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2634:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2714:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2738:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2670:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2670:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2670:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2596:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2608:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2619:4:2",
														"type": ""
													}
												],
												"src": "2526:222:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_OrderState_$85(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_OrderState_$85(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_OrderState_$85(value)\n    }\n\n    function convert_t_enum$_OrderState_$85_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_OrderState_$85(value)\n    }\n\n    function abi_encode_t_enum$_OrderState_$85_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_OrderState_$85_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_OrderState_$85__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_OrderState_$85_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c806312065fe0146100ab5780631865c57d146100d65780633ccfd60b14610101578063893d20e814610118578063ea8a1af014610143576100a6565b366100a6577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258743334604051610084929190610203565b60405180910390a1346002600082825461009e919061025b565b925050819055005b600080fd5b3480156100b757600080fd5b506100c061015a565b6040516100cd919061028f565b60405180910390f35b3480156100e257600080fd5b506100eb610164565b6040516100f89190610321565b60405180910390f35b34801561010d57600080fd5b5061011661017b565b005b34801561012457600080fd5b5061012d61017d565b60405161013a919061033c565b60405180910390f35b34801561014f57600080fd5b506101586101a7565b005b6000600254905090565b6000600460009054906101000a900460ff16905090565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101d4826101a9565b9050919050565b6101e4816101c9565b82525050565b6000819050919050565b6101fd816101ea565b82525050565b600060408201905061021860008301856101db565b61022560208301846101f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610266826101ea565b9150610271836101ea565b92508282019050808211156102895761028861022c565b5b92915050565b60006020820190506102a460008301846101f4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106102ea576102e96102aa565b5b50565b60008190506102fb826102d9565b919050565b600061030b826102ed565b9050919050565b61031b81610300565b82525050565b60006020820190506103366000830184610312565b92915050565b600060208201905061035160008301846101db565b9291505056fea2646970667358221220fd7adc61a777c86b773b4f7252dfeee4a8f267b70103e0042fea835ac2d1480c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x1865C57D EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x143 JUMPI PUSH2 0xA6 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA6 JUMPI PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x84 SWAP3 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x25B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x1A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D4 DUP3 PUSH2 0x1A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x1C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FD DUP2 PUSH2 0x1EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x218 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0x225 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x266 DUP3 PUSH2 0x1EA JUMP JUMPDEST SWAP2 POP PUSH2 0x271 DUP4 PUSH2 0x1EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x22C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2EA JUMPI PUSH2 0x2E9 PUSH2 0x2AA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2FB DUP3 PUSH2 0x2D9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP3 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31B DUP2 PUSH2 0x300 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x336 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x312 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x351 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT PUSH27 0xDC61A777C86B773B4F7252DFEEE4A8F267B70103E0042FEA835AC2 0xD1 BASEFEE 0xC PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "763:2619:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3310:31;3319:10;3331:9;3310:31;;;;;;;:::i;:::-;;;;;;;;3363:9;3351:8;;:21;;;;;;;:::i;:::-;;;;;;;;763:2619;;;;2880:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2792:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3092:170;;;;;;;;;;;;;:::i;:::-;;2707:80;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2989:98;;;;;;;;;;;;;:::i;:::-;;2880:81;2923:4;2946:8;;2939:15;;2880:81;:::o;2792:83::-;2833:10;2862:6;;;;;;;;;;;2855:13;;2792:83;:::o;3092:170::-;:::o;2707:80::-;2748:7;2774:6;;;;;;;;;;;2767:13;;2707:80;:::o;2989:98::-;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:77::-;402:7;431:5;420:16;;365:77;;;:::o;448:118::-;535:24;553:5;535:24;:::i;:::-;530:3;523:37;448:118;;:::o;572:332::-;693:4;731:2;720:9;716:18;708:26;;744:71;812:1;801:9;797:17;788:6;744:71;:::i;:::-;825:72;893:2;882:9;878:18;869:6;825:72;:::i;:::-;572:332;;;;;:::o;910:180::-;958:77;955:1;948:88;1055:4;1052:1;1045:15;1079:4;1076:1;1069:15;1096:191;1136:3;1155:20;1173:1;1155:20;:::i;:::-;1150:25;;1189:20;1207:1;1189:20;:::i;:::-;1184:25;;1232:1;1229;1225:9;1218:16;;1253:3;1250:1;1247:10;1244:36;;;1260:18;;:::i;:::-;1244:36;1096:191;;;;:::o;1293:222::-;1386:4;1424:2;1413:9;1409:18;1401:26;;1437:71;1505:1;1494:9;1490:17;1481:6;1437:71;:::i;:::-;1293:222;;;;:::o;1521:180::-;1569:77;1566:1;1559:88;1666:4;1663:1;1656:15;1690:4;1687:1;1680:15;1707:118;1793:1;1786:5;1783:12;1773:46;;1799:18;;:::i;:::-;1773:46;1707:118;:::o;1831:137::-;1881:7;1910:5;1899:16;;1916:46;1956:5;1916:46;:::i;:::-;1831:137;;;:::o;1974:::-;2035:9;2068:37;2099:5;2068:37;:::i;:::-;2055:50;;1974:137;;;:::o;2117:153::-;2215:48;2257:5;2215:48;:::i;:::-;2210:3;2203:61;2117:153;;:::o;2276:244::-;2380:4;2418:2;2407:9;2403:18;2395:26;;2431:82;2510:1;2499:9;2495:17;2486:6;2431:82;:::i;:::-;2276:244;;;;:::o;2526:222::-;2619:4;2657:2;2646:9;2642:18;2634:26;;2670:71;2738:1;2727:9;2723:17;2714:6;2670:71;:::i;:::-;2526:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "181800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cancel()": "210",
								"getBalance()": "2415",
								"getOwner()": "2566",
								"getState()": "2568",
								"withdraw()": "166"
							},
							"internal": {
								"addLeg(struct OrderLeg memory)": "infinite",
								"submit()": "infinite",
								"validateBuyLeg(struct OrderLeg memory)": "infinite",
								"validateSellLeg(struct OrderLeg memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2171,
									"end": 2679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2360,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2367,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2352,
									"end": 2353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2352,
									"end": 2367,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2394,
									"end": 2398,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2400,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2394,
									"end": 2401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2394,
									"end": 2401,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2387,
									"end": 2393,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2393,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2402,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2402,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2402,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2387,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2369,
									"end": 2372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2413,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2528,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2522,
									"end": 2528,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2522,
									"end": 2536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2557,
									"end": 2566,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2554,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2546,
									"end": 2566,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2566,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2585,
									"end": 2605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2576,
									"end": 2582,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2576,
									"end": 2582,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2576,
									"end": 2605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2576,
									"end": 2605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2664,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2664,
									"end": 2670,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2664,
									"end": 2670,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2672,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2664,
									"end": 2672,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2672,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2664,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 2165,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1882,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2002,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1976,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 1979,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 1984,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1976,
									"end": 1984,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 1984,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1976,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2002,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 2049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1972,
									"end": 2049,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2018,
									"end": 2033,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2018,
									"end": 2033,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2038,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2018,
									"end": 2038,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2038,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2018,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 2049,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1972,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2062,
									"end": 2087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2065,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2070,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2062,
									"end": 2070,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2070,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2062,
									"end": 2087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2062,
									"end": 2087,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2058,
									"end": 2133,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2118,
									"end": 2121,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2103,
									"end": 2117,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2103,
									"end": 2117,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2122,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2103,
									"end": 2122,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2122,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2103,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2133,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2058,
									"end": 2133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2143,
									"end": 2158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 2165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 2165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1752,
									"end": 1876,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1752,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1752,
									"end": 1876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1335,
									"end": 1540,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1335,
									"end": 1540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1335,
									"end": 1540,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1335,
									"end": 1540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1545,
									"end": 1747,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1545,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1545,
									"end": 1747,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1545,
									"end": 1747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 949,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 845,
									"end": 949,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 890,
									"end": 897,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 937,
									"end": 942,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 919,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 919,
									"end": 943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 919,
									"end": 943,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 919,
									"end": 943,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 908,
									"end": 943,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 908,
									"end": 943,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 949,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 949,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 845,
									"end": 949,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 955,
									"end": 1093,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 955,
									"end": 1093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 1062,
									"end": 1067,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1036,
									"end": 1068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1036,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 1036,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1069,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1016,
									"end": 1087,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 1016,
									"end": 1087,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1084,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1073,
									"end": 1085,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1016,
									"end": 1087,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 1016,
									"end": 1087,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 955,
									"end": 1093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 955,
									"end": 1093,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1099,
									"end": 1258,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1099,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1164,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1189,
									"end": 1202,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1211,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 1246,
									"end": 1251,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1211,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1211,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1211,
									"end": 1252,
									"name": "tag",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 1211,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1099,
									"end": 1258,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1099,
									"end": 1258,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1099,
									"end": 1258,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1099,
									"end": 1258,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1099,
									"end": 1258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1264,
									"end": 1381,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1264,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1363,
									"end": 1375,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1489,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1387,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1479,
									"end": 1481,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1475,
									"end": 1482,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1472,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1459,
									"end": 1473,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1455,
									"end": 1483,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1445,
									"end": 1483,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1445,
									"end": 1483,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1489,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1489,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1489,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1387,
									"end": 1489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1495,
									"end": 1675,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1495,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1543,
									"end": 1620,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1621,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1640,
									"end": 1644,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1630,
									"end": 1645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1661,
									"end": 1662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1654,
									"end": 1669,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1764,
									"end": 1791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1791,
									"name": "tag",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 1764,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1756,
									"end": 1762,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1752,
									"end": 1792,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1894,
									"end": 1900,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1882,
									"end": 1892,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1879,
									"end": 1901,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1846,
									"end": 1856,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1843,
									"end": 1877,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1840,
									"end": 1902,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1925,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1925,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 1837,
									"end": 1925,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1905,
									"end": 1923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 1905,
									"end": 1923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1905,
									"end": 1923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1905,
									"end": 1923,
									"name": "tag",
									"source": 2,
									"value": "95"
								},
								{
									"begin": 1905,
									"end": 1923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1925,
									"name": "tag",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 1837,
									"end": 1925,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1945,
									"end": 1955,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1941,
									"end": 1943,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1934,
									"end": 1956,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1724,
									"end": 1962,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1962,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1968,
									"end": 2097,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1968,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2002,
									"end": 2008,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2029,
									"end": 2049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 2029,
									"end": 2049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 2029,
									"end": 2049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2029,
									"end": 2049,
									"name": "tag",
									"source": 2,
									"value": "97"
								},
								{
									"begin": 2029,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2019,
									"end": 2049,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2019,
									"end": 2049,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 2086,
									"end": 2090,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 2058,
									"end": 2091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2091,
									"name": "tag",
									"source": 2,
									"value": "98"
								},
								{
									"begin": 2058,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1968,
									"end": 2097,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1968,
									"end": 2097,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1968,
									"end": 2097,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1968,
									"end": 2097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2439,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 2103,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2205,
									"end": 2209,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2295,
									"end": 2313,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2287,
									"end": 2293,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2284,
									"end": 2314,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2281,
									"end": 2337,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2281,
									"end": 2337,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2281,
									"end": 2337,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 2,
									"value": "101"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2281,
									"end": 2337,
									"name": "tag",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2281,
									"end": 2337,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2367,
									"end": 2371,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2359,
									"end": 2365,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2372,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2347,
									"end": 2372,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2347,
									"end": 2372,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2427,
									"end": 2431,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2421,
									"end": 2425,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2417,
									"end": 2432,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2409,
									"end": 2432,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2409,
									"end": 2432,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2439,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2439,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2439,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2103,
									"end": 2439,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2445,
									"end": 2562,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2445,
									"end": 2562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2554,
									"end": 2555,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2551,
									"end": 2552,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2544,
									"end": 2556,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2568,
									"end": 2685,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 2568,
									"end": 2685,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2677,
									"end": 2678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2674,
									"end": 2675,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2667,
									"end": 2679,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2851,
									"end": 2858,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2869,
									"end": 2885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2869,
									"end": 2885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2814,
									"end": 2891,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2814,
									"end": 2891,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2897,
									"end": 3019,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2897,
									"end": 3019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2970,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 2988,
									"end": 2993,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2970,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2970,
									"end": 2994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2970,
									"end": 2994,
									"name": "tag",
									"source": 2,
									"value": "107"
								},
								{
									"begin": 2970,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2963,
									"end": 2968,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2960,
									"end": 2995,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 2950,
									"end": 3013,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 2950,
									"end": 3013,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3009,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3006,
									"end": 3007,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2999,
									"end": 3011,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2950,
									"end": 3013,
									"name": "tag",
									"source": 2,
									"value": "108"
								},
								{
									"begin": 2950,
									"end": 3013,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2897,
									"end": 3019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2897,
									"end": 3019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3025,
									"end": 3168,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 3025,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3082,
									"end": 3087,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3113,
									"end": 3119,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3107,
									"end": 3120,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3129,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 3156,
									"end": 3161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3129,
									"end": 3162,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 3129,
									"end": 3162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3129,
									"end": 3162,
									"name": "tag",
									"source": 2,
									"value": "110"
								},
								{
									"begin": 3129,
									"end": 3162,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3025,
									"end": 3168,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3025,
									"end": 3168,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3025,
									"end": 3168,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3025,
									"end": 3168,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3025,
									"end": 3168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3174,
									"end": 3285,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3174,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3259,
									"end": 3260,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3252,
									"end": 3257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3249,
									"end": 3261,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3239,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 3239,
									"end": 3279,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3275,
									"end": 3276,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3265,
									"end": 3277,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3239,
									"end": 3279,
									"name": "tag",
									"source": 2,
									"value": "112"
								},
								{
									"begin": 3239,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3174,
									"end": 3285,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3174,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3458,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 3291,
									"end": 3458,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3360,
									"end": 3365,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3391,
									"end": 3397,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3385,
									"end": 3398,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3398,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3398,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3407,
									"end": 3452,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 3446,
									"end": 3451,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3407,
									"end": 3452,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3407,
									"end": 3452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3407,
									"end": 3452,
									"name": "tag",
									"source": 2,
									"value": "114"
								},
								{
									"begin": 3407,
									"end": 3452,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3458,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3458,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3458,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3458,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 4639,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 3487,
									"end": 4639,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3572,
									"end": 3577,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3616,
									"end": 3620,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3599,
									"end": 3602,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3595,
									"end": 3614,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3591,
									"end": 3621,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 3588,
									"end": 3705,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3588,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 3588,
									"end": 3705,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 3624,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 3624,
									"end": 3703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3624,
									"end": 3703,
									"name": "tag",
									"source": 2,
									"value": "117"
								},
								{
									"begin": 3624,
									"end": 3703,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3588,
									"end": 3705,
									"name": "tag",
									"source": 2,
									"value": "116"
								},
								{
									"begin": 3588,
									"end": 3705,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3723,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 3723,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 3723,
									"end": 3744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3723,
									"end": 3744,
									"name": "tag",
									"source": 2,
									"value": "118"
								},
								{
									"begin": 3723,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3714,
									"end": 3744,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3714,
									"end": 3744,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3804,
									"end": 3805,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3844,
									"end": 3904,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 3900,
									"end": 3903,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3891,
									"end": 3897,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3880,
									"end": 3889,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3876,
									"end": 3898,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3844,
									"end": 3904,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 3844,
									"end": 3904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3844,
									"end": 3904,
									"name": "tag",
									"source": 2,
									"value": "119"
								},
								{
									"begin": 3844,
									"end": 3904,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3837,
									"end": 3841,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3830,
									"end": 3835,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3819,
									"end": 3905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3754,
									"end": 3916,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3979,
									"end": 3981,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4020,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 4076,
									"end": 4079,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4067,
									"end": 4073,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4056,
									"end": 4065,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4052,
									"end": 4074,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4020,
									"end": 4080,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 4020,
									"end": 4080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4020,
									"end": 4080,
									"name": "tag",
									"source": 2,
									"value": "120"
								},
								{
									"begin": 4020,
									"end": 4080,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4013,
									"end": 4017,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4006,
									"end": 4011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4002,
									"end": 4018,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3995,
									"end": 4081,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3926,
									"end": 4092,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4156,
									"end": 4158,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4197,
									"end": 4257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 4253,
									"end": 4256,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4244,
									"end": 4250,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4233,
									"end": 4242,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4229,
									"end": 4251,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4197,
									"end": 4257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 4197,
									"end": 4257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4197,
									"end": 4257,
									"name": "tag",
									"source": 2,
									"value": "121"
								},
								{
									"begin": 4197,
									"end": 4257,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4190,
									"end": 4194,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 4183,
									"end": 4188,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4179,
									"end": 4195,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4172,
									"end": 4258,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4102,
									"end": 4269,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4334,
									"end": 4336,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 4375,
									"end": 4435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 4431,
									"end": 4434,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4422,
									"end": 4428,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4411,
									"end": 4420,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4407,
									"end": 4429,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4375,
									"end": 4435,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 4375,
									"end": 4435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4375,
									"end": 4435,
									"name": "tag",
									"source": 2,
									"value": "122"
								},
								{
									"begin": 4375,
									"end": 4435,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4368,
									"end": 4372,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 4361,
									"end": 4366,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4357,
									"end": 4373,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4350,
									"end": 4436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4279,
									"end": 4447,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4506,
									"end": 4509,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 4548,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 4616,
									"end": 4619,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4607,
									"end": 4613,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4596,
									"end": 4605,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4592,
									"end": 4614,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4548,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 4548,
									"end": 4620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4548,
									"end": 4620,
									"name": "tag",
									"source": 2,
									"value": "123"
								},
								{
									"begin": 4548,
									"end": 4620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4541,
									"end": 4545,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 4534,
									"end": 4539,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4530,
									"end": 4546,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4523,
									"end": 4621,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4457,
									"end": 4632,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 4639,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 4639,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 4639,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 4639,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3487,
									"end": 4639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4802,
									"end": 4807,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4827,
									"end": 4933,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 4843,
									"end": 4932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 4925,
									"end": 4931,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 4843,
									"end": 4932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 4843,
									"end": 4932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4843,
									"end": 4932,
									"name": "tag",
									"source": 2,
									"value": "126"
								},
								{
									"begin": 4843,
									"end": 4932,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4827,
									"end": 4933,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 4827,
									"end": 4933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4827,
									"end": 4933,
									"name": "tag",
									"source": 2,
									"value": "125"
								},
								{
									"begin": 4827,
									"end": 4933,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4818,
									"end": 4933,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4818,
									"end": 4933,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4953,
									"end": 4958,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 4982,
									"end": 4988,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4975,
									"end": 4980,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4968,
									"end": 4989,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5016,
									"end": 5020,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5005,
									"end": 5021,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4998,
									"end": 5021,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4998,
									"end": 5021,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5069,
									"end": 5073,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 5061,
									"end": 5067,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5057,
									"end": 5074,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 5049,
									"end": 5055,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5045,
									"end": 5075,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5098,
									"end": 5101,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 5090,
									"end": 5096,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5087,
									"end": 5102,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5206,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5206,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 5084,
									"end": 5206,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5117,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 5117,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 5117,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5117,
									"end": 5196,
									"name": "tag",
									"source": 2,
									"value": "128"
								},
								{
									"begin": 5117,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5084,
									"end": 5206,
									"name": "tag",
									"source": 2,
									"value": "127"
								},
								{
									"begin": 5084,
									"end": 5206,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5232,
									"end": 5238,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "tag",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5249,
									"end": 5255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5244,
									"end": 5247,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5241,
									"end": 5256,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5324,
									"end": 5327,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5353,
									"end": 5426,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 5422,
									"end": 5425,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 5410,
									"end": 5420,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5353,
									"end": 5426,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 5353,
									"end": 5426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5353,
									"end": 5426,
									"name": "tag",
									"source": 2,
									"value": "132"
								},
								{
									"begin": 5353,
									"end": 5426,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5348,
									"end": 5351,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5341,
									"end": 5427,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5456,
									"end": 5460,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5451,
									"end": 5454,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5447,
									"end": 5461,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5440,
									"end": 5461,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 5440,
									"end": 5461,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5291,
									"end": 5471,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5275,
									"end": 5279,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 5270,
									"end": 5273,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5266,
									"end": 5280,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5259,
									"end": 5280,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5259,
									"end": 5280,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "129"
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "tag",
									"source": 2,
									"value": "131"
								},
								{
									"begin": 5215,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5219,
									"end": 5240,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4808,
									"end": 5477,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4808,
									"end": 5477,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4670,
									"end": 5477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5508,
									"end": 5943,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 5508,
									"end": 5943,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5615,
									"end": 5620,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5664,
									"end": 5667,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5657,
									"end": 5661,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5649,
									"end": 5655,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5645,
									"end": 5662,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5641,
									"end": 5668,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 5631,
									"end": 5753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 5631,
									"end": 5753,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5672,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 5672,
									"end": 5751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 5672,
									"end": 5751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5672,
									"end": 5751,
									"name": "tag",
									"source": 2,
									"value": "135"
								},
								{
									"begin": 5672,
									"end": 5751,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5631,
									"end": 5753,
									"name": "tag",
									"source": 2,
									"value": "134"
								},
								{
									"begin": 5631,
									"end": 5753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5782,
									"end": 5788,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5776,
									"end": 5789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5807,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 5933,
									"end": 5936,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5925,
									"end": 5931,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5918,
									"end": 5922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5910,
									"end": 5916,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5906,
									"end": 5923,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5807,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 5807,
									"end": 5937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5807,
									"end": 5937,
									"name": "tag",
									"source": 2,
									"value": "136"
								},
								{
									"begin": 5807,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5798,
									"end": 5937,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5798,
									"end": 5937,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5621,
									"end": 5943,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5508,
									"end": 5943,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5508,
									"end": 5943,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5508,
									"end": 5943,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5508,
									"end": 5943,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5508,
									"end": 5943,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6095,
									"end": 6101,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6103,
									"end": 6109,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6160,
									"end": 6162,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6148,
									"end": 6157,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6139,
									"end": 6146,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6135,
									"end": 6158,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6131,
									"end": 6163,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 6128,
									"end": 6247,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6128,
									"end": 6247,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 6128,
									"end": 6247,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6166,
									"end": 6245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 6166,
									"end": 6245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6166,
									"end": 6245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6166,
									"end": 6245,
									"name": "tag",
									"source": 2,
									"value": "139"
								},
								{
									"begin": 6166,
									"end": 6245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6128,
									"end": 6247,
									"name": "tag",
									"source": 2,
									"value": "138"
								},
								{
									"begin": 6128,
									"end": 6247,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6286,
									"end": 6287,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6311,
									"end": 6375,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 6367,
									"end": 6374,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6358,
									"end": 6364,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6347,
									"end": 6356,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 6343,
									"end": 6365,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6375,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6311,
									"end": 6375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6311,
									"end": 6375,
									"name": "tag",
									"source": 2,
									"value": "140"
								},
								{
									"begin": 6311,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6301,
									"end": 6375,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6301,
									"end": 6375,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6257,
									"end": 6385,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6424,
									"end": 6426,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6450,
									"end": 6522,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 6514,
									"end": 6521,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6494,
									"end": 6503,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 6490,
									"end": 6512,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6450,
									"end": 6522,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6450,
									"end": 6522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6450,
									"end": 6522,
									"name": "tag",
									"source": 2,
									"value": "141"
								},
								{
									"begin": 6450,
									"end": 6522,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6440,
									"end": 6522,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6440,
									"end": 6522,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6395,
									"end": 6532,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6592,
									"end": 6594,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6581,
									"end": 6590,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6577,
									"end": 6595,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6596,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6623,
									"end": 6641,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6615,
									"end": 6621,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6612,
									"end": 6642,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 6609,
									"end": 6726,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6609,
									"end": 6726,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 6609,
									"end": 6726,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6645,
									"end": 6724,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "143"
								},
								{
									"begin": 6645,
									"end": 6724,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6645,
									"end": 6724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6645,
									"end": 6724,
									"name": "tag",
									"source": 2,
									"value": "143"
								},
								{
									"begin": 6645,
									"end": 6724,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6609,
									"end": 6726,
									"name": "tag",
									"source": 2,
									"value": "142"
								},
								{
									"begin": 6609,
									"end": 6726,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6750,
									"end": 6864,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 6856,
									"end": 6863,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6847,
									"end": 6853,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6836,
									"end": 6845,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 6832,
									"end": 6854,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6750,
									"end": 6864,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6750,
									"end": 6864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6750,
									"end": 6864,
									"name": "tag",
									"source": 2,
									"value": "144"
								},
								{
									"begin": 6750,
									"end": 6864,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6740,
									"end": 6864,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6740,
									"end": 6864,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6542,
									"end": 6874,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5949,
									"end": 6881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6887,
									"end": 7067,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 6887,
									"end": 7067,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6935,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6932,
									"end": 6933,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 7013,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7032,
									"end": 7036,
									"name": "PUSH",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7029,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7022,
									"end": 7037,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7056,
									"end": 7060,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7046,
									"end": 7061,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7253,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 7073,
									"end": 7253,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7121,
									"end": 7198,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7118,
									"end": 7119,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7111,
									"end": 7199,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7218,
									"end": 7222,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 7215,
									"end": 7216,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7208,
									"end": 7223,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7242,
									"end": 7246,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7239,
									"end": 7240,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7232,
									"end": 7247,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7259,
									"end": 7492,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7259,
									"end": 7492,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7298,
									"end": 7301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7321,
									"end": 7345,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 7339,
									"end": 7344,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7321,
									"end": 7345,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 7321,
									"end": 7345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7321,
									"end": 7345,
									"name": "tag",
									"source": 2,
									"value": "148"
								},
								{
									"begin": 7321,
									"end": 7345,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7312,
									"end": 7345,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7312,
									"end": 7345,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7367,
									"end": 7433,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7360,
									"end": 7365,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7357,
									"end": 7434,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7354,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "149"
								},
								{
									"begin": 7354,
									"end": 7457,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "150"
								},
								{
									"begin": 7437,
									"end": 7455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 7437,
									"end": 7455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7437,
									"end": 7455,
									"name": "tag",
									"source": 2,
									"value": "150"
								},
								{
									"begin": 7437,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7354,
									"end": 7457,
									"name": "tag",
									"source": 2,
									"value": "149"
								},
								{
									"begin": 7354,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7484,
									"end": 7485,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 7477,
									"end": 7482,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7473,
									"end": 7486,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7466,
									"end": 7486,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7466,
									"end": 7486,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7259,
									"end": 7492,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7259,
									"end": 7492,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7259,
									"end": 7492,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7259,
									"end": 7492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7498,
									"end": 7678,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7498,
									"end": 7678,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7546,
									"end": 7623,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7543,
									"end": 7544,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7624,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7643,
									"end": 7647,
									"name": "PUSH",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7633,
									"end": 7648,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7667,
									"end": 7671,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7664,
									"end": 7665,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7657,
									"end": 7672,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 3382,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd7adc61a777c86b773b4f7252dfeee4a8f267b70103e0042fea835ac2d1480c64736f6c63430008110033",
									".code": [
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "12065FE0"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "1865C57D"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "893D20E8"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "EA8A1AF0"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 3319,
											"end": 3329,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3310,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3363,
											"end": 3372,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3359,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3351,
											"end": 3359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3351,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3372,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 3382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2880,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2880,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2792,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2792,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3092,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2707,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2707,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2989,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3092,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2989,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 442,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 365,
											"end": 442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 420,
											"end": 436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 420,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 365,
											"end": 442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 448,
											"end": 566,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 448,
											"end": 566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 553,
											"end": 558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 535,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 535,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 535,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 530,
											"end": 533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 523,
											"end": 560,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 448,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 572,
											"end": 904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 729,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 734,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 708,
											"end": 734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 744,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 810,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 797,
											"end": 814,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 744,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 744,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 744,
											"end": 815,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 744,
											"end": 815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 878,
											"end": 896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 825,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 825,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 825,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 825,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 572,
											"end": 904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 910,
											"end": 1090,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 910,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1035,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1083,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1287,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1096,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1155,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1175,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1155,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1189,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1189,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1209,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1257,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1260,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1244,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1287,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1515,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1293,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1427,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1437,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1508,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1437,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1515,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1701,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1521,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1647,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1663,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1690,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1707,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1795,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1773,
											"end": 1819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1799,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1819,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1773,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1968,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1956,
											"end": 1961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1916,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1916,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1974,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2068,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2068,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2270,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2117,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2215,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2520,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2276,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2431,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2431,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2520,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2748,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2526,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2642,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2740,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2670,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2741,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2670,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Order.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cancel()": "ea8a1af0",
							"getBalance()": "12065fe0",
							"getOwner()": "893d20e8",
							"getState()": "1865c57d",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price_low\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price_high\",\"type\":\"uint256\"},{\"internalType\":\"enum TradeSide\",\"name\":\"side\",\"type\":\"uint8\"}],\"internalType\":\"struct OrderLeg[]\",\"name\":\"legs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum OrderState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Order.sol\":\"Order\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Order.sol\":{\"keccak256\":\"0xd6965979fcacd9daa77b21f45de9501c1de0ce939c98f2aee9977120b7e9759e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b8546d282cdd684931a1a3a4a40e5086483238295155a758187d0af21e014c07\",\"dweb:/ipfs/QmWwbJ53yKZxT9imZc9TUXhMW4fRdoNuP9AnBkvkb1rk1i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 108,
								"contract": "Order.sol:Order",
								"label": "_exchange",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 110,
								"contract": "Order.sol:Order",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 112,
								"contract": "Order.sol:Order",
								"label": "_balance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 117,
								"contract": "Order.sol:Order",
								"label": "_token_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_contract(IERC20)77,t_uint256)"
							},
							{
								"astId": 120,
								"contract": "Order.sol:Order",
								"label": "_state",
								"offset": 0,
								"slot": "4",
								"type": "t_enum(OrderState)85"
							},
							{
								"astId": 124,
								"contract": "Order.sol:Order",
								"label": "_legs",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(OrderLeg)100_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(OrderLeg)100_storage)dyn_storage": {
								"base": "t_struct(OrderLeg)100_storage",
								"encoding": "dynamic_array",
								"label": "struct OrderLeg[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(OrderState)85": {
								"encoding": "inplace",
								"label": "enum OrderState",
								"numberOfBytes": "1"
							},
							"t_enum(TradeSide)88": {
								"encoding": "inplace",
								"label": "enum TradeSide",
								"numberOfBytes": "1"
							},
							"t_mapping(t_contract(IERC20)77,t_uint256)": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)77",
								"label": "mapping(contract IERC20 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(OrderLeg)100_storage": {
								"encoding": "inplace",
								"label": "struct OrderLeg",
								"members": [
									{
										"astId": 90,
										"contract": "Order.sol:Order",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 92,
										"contract": "Order.sol:Order",
										"label": "quantity",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 94,
										"contract": "Order.sol:Order",
										"label": "price_low",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 96,
										"contract": "Order.sol:Order",
										"label": "price_high",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 99,
										"contract": "Order.sol:Order",
										"label": "side",
										"offset": 0,
										"slot": "4",
										"type": "t_enum(TradeSide)88"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"Order.sol": {
				"ast": {
					"absolutePath": "Order.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Order": [
							279
						],
						"OrderLeg": [
							100
						],
						"OrderState": [
							85
						],
						"TradeSide": [
							88
						]
					},
					"id": 280,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 78,
							"src": "140:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "OrderState",
							"id": 85,
							"members": [
								{
									"id": 81,
									"name": "Submitted",
									"nameLocation": "268:9:1",
									"nodeType": "EnumValue",
									"src": "268:9:1"
								},
								{
									"id": 82,
									"name": "Active",
									"nameLocation": "336:6:1",
									"nodeType": "EnumValue",
									"src": "336:6:1"
								},
								{
									"id": 83,
									"name": "Filled",
									"nameLocation": "399:6:1",
									"nodeType": "EnumValue",
									"src": "399:6:1"
								},
								{
									"id": 84,
									"name": "Cancelled",
									"nameLocation": "458:9:1",
									"nodeType": "EnumValue",
									"src": "458:9:1"
								}
							],
							"name": "OrderState",
							"nameLocation": "251:10:1",
							"nodeType": "EnumDefinition",
							"src": "246:276:1"
						},
						{
							"canonicalName": "TradeSide",
							"id": 88,
							"members": [
								{
									"id": 86,
									"name": "Buy",
									"nameLocation": "545:3:1",
									"nodeType": "EnumValue",
									"src": "545:3:1"
								},
								{
									"id": 87,
									"name": "Sell",
									"nameLocation": "554:4:1",
									"nodeType": "EnumValue",
									"src": "554:4:1"
								}
							],
							"name": "TradeSide",
							"nameLocation": "529:9:1",
							"nodeType": "EnumDefinition",
							"src": "524:36:1"
						},
						{
							"canonicalName": "OrderLeg",
							"id": 100,
							"members": [
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "592:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "584:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 89,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "584:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "quantity",
									"nameLocation": "608:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "603:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "603:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "price_low",
									"nameLocation": "627:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "622:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "622:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 96,
									"mutability": "mutable",
									"name": "price_high",
									"nameLocation": "671:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "666:15:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "666:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 99,
									"mutability": "mutable",
									"name": "side",
									"nameLocation": "753:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 100,
									"src": "743:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_TradeSide_$88",
										"typeString": "enum TradeSide"
									},
									"typeName": {
										"id": 98,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 97,
											"name": "TradeSide",
											"nameLocations": [
												"743:9:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 88,
											"src": "743:9:1"
										},
										"referencedDeclaration": 88,
										"src": "743:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_TradeSide_$88",
											"typeString": "enum TradeSide"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "OrderLeg",
							"nameLocation": "569:8:1",
							"nodeType": "StructDefinition",
							"scope": 280,
							"src": "562:198:1",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Order",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "Order",
							"nameLocation": "772:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874",
									"id": 106,
									"name": "Received",
									"nameLocation": "790:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "799:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:1"
									},
									"src": "784:30:1"
								},
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "_exchange",
									"nameLocation": "828:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "820:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 107,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "820:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "924:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "908:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 109,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 112,
									"mutability": "mutable",
									"name": "_balance",
									"nameLocation": "1010:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "1005:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1005:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 117,
									"mutability": "mutable",
									"name": "_token_balances",
									"nameLocation": "1117:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "1093:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$77_$_t_uint256_$",
										"typeString": "mapping(contract IERC20 => uint256)"
									},
									"typeName": {
										"id": 116,
										"keyType": {
											"id": 114,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 113,
												"name": "IERC20",
												"nameLocations": [
													"1101:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "1101:6:1"
											},
											"referencedDeclaration": 77,
											"src": "1101:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$77_$_t_uint256_$",
											"typeString": "mapping(contract IERC20 => uint256)"
										},
										"valueType": {
											"id": 115,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1111:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_state",
									"nameLocation": "1188:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "1177:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_OrderState_$85",
										"typeString": "enum OrderState"
									},
									"typeName": {
										"id": 119,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 118,
											"name": "OrderState",
											"nameLocations": [
												"1177:10:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 85,
											"src": "1177:10:1"
										},
										"referencedDeclaration": 85,
										"src": "1177:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_OrderState_$85",
											"typeString": "enum OrderState"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "_legs",
									"nameLocation": "1269:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 279,
									"src": "1258:16:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_storage_$dyn_storage",
										"typeString": "struct OrderLeg[]"
									},
									"typeName": {
										"baseType": {
											"id": 122,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 121,
												"name": "OrderLeg",
												"nameLocations": [
													"1258:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 100,
												"src": "1258:8:1"
											},
											"referencedDeclaration": 100,
											"src": "1258:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_OrderLeg_$100_storage_ptr",
												"typeString": "struct OrderLeg"
											}
										},
										"id": 123,
										"nodeType": "ArrayTypeName",
										"src": "1258:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_storage_$dyn_storage_ptr",
											"typeString": "struct OrderLeg[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1390:150:1",
										"statements": []
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateSellLeg",
									"nameLocation": "1344:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "leg",
												"nameLocation": "1376:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1360:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
													"typeString": "struct OrderLeg"
												},
												"typeName": {
													"id": 126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 125,
														"name": "OrderLeg",
														"nameLocations": [
															"1360:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "1360:8:1"
													},
													"referencedDeclaration": 100,
													"src": "1360:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderLeg_$100_storage_ptr",
														"typeString": "struct OrderLeg"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:21:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:1"
									},
									"scope": 279,
									"src": "1335:205:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1599:148:1",
										"statements": []
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateBuyLeg",
									"nameLocation": "1554:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "leg",
												"nameLocation": "1585:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1569:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
													"typeString": "struct OrderLeg"
												},
												"typeName": {
													"id": 133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 132,
														"name": "OrderLeg",
														"nameLocations": [
															"1569:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "1569:8:1"
													},
													"referencedDeclaration": 100,
													"src": "1569:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderLeg_$100_storage_ptr",
														"typeString": "struct OrderLeg"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1568:21:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:0:1"
									},
									"scope": 279,
									"src": "1545:202:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1779:97:1",
										"statements": []
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submit",
									"nameLocation": "1761:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1767:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1779:0:1"
									},
									"scope": 279,
									"src": "1752:124:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1928:237:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_TradeSide_$88",
														"typeString": "enum TradeSide"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 148,
															"name": "leg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "1976:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																"typeString": "struct OrderLeg memory"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1980:4:1",
														"memberName": "side",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "1976:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TradeSide_$88",
															"typeString": "enum TradeSide"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 150,
															"name": "TradeSide",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1988:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_TradeSide_$88_$",
																"typeString": "type(enum TradeSide)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1998:4:1",
														"memberName": "Sell",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "1988:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TradeSide_$88",
															"typeString": "enum TradeSide"
														}
													},
													"src": "1976:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "1972:77:1",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "2004:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 154,
																		"name": "leg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "2034:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																			"typeString": "struct OrderLeg memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																			"typeString": "struct OrderLeg memory"
																		}
																	],
																	"id": 153,
																	"name": "validateSellLeg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "2018:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OrderLeg_$100_memory_ptr_$returns$__$",
																		"typeString": "function (struct OrderLeg memory)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "ExpressionStatement",
															"src": "2018:20:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_TradeSide_$88",
														"typeString": "enum TradeSide"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 159,
															"name": "leg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2062:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																"typeString": "struct OrderLeg memory"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2066:4:1",
														"memberName": "side",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "2062:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TradeSide_$88",
															"typeString": "enum TradeSide"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 161,
															"name": "TradeSide",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "2074:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_TradeSide_$88_$",
																"typeString": "type(enum TradeSide)"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2084:3:1",
														"memberName": "Buy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 86,
														"src": "2074:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TradeSide_$88",
															"typeString": "enum TradeSide"
														}
													},
													"src": "2062:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 169,
												"nodeType": "IfStatement",
												"src": "2058:75:1",
												"trueBody": {
													"id": 168,
													"nodeType": "Block",
													"src": "2089:44:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 165,
																		"name": "leg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "2118:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																			"typeString": "struct OrderLeg memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																			"typeString": "struct OrderLeg memory"
																		}
																	],
																	"id": 164,
																	"name": "validateBuyLeg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "2103:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OrderLeg_$100_memory_ptr_$returns$__$",
																		"typeString": "function (struct OrderLeg memory)"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2103:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 167,
															"nodeType": "ExpressionStatement",
															"src": "2103:19:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 173,
															"name": "leg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2154:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																"typeString": "struct OrderLeg memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																"typeString": "struct OrderLeg memory"
															}
														],
														"expression": {
															"id": 170,
															"name": "_legs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2143:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_storage_$dyn_storage",
																"typeString": "struct OrderLeg storage ref[] storage ref"
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2149:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2143:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_OrderLeg_$100_storage_$dyn_storage_ptr_$_t_struct$_OrderLeg_$100_storage_$returns$__$bound_to$_t_array$_t_struct$_OrderLeg_$100_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct OrderLeg storage ref[] storage pointer,struct OrderLeg storage ref)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2143:15:1"
											}
										]
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLeg",
									"nameLocation": "1891:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "leg",
												"nameLocation": "1914:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1898:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
													"typeString": "struct OrderLeg"
												},
												"typeName": {
													"id": 144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 143,
														"name": "OrderLeg",
														"nameLocations": [
															"1898:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 100,
														"src": "1898:8:1"
													},
													"referencedDeclaration": 100,
													"src": "1898:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OrderLeg_$100_storage_ptr",
														"typeString": "struct OrderLeg"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:21:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1928:0:1"
									},
									"scope": 279,
									"src": "1882:283:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "2286:393:1",
										"statements": [
											{
												"body": {
													"id": 205,
													"nodeType": "Block",
													"src": "2373:40:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 200,
																			"name": "legs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "2394:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct OrderLeg memory[] memory"
																			}
																		},
																		"id": 202,
																		"indexExpression": {
																			"id": 201,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "2399:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2394:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																			"typeString": "struct OrderLeg memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_OrderLeg_$100_memory_ptr",
																			"typeString": "struct OrderLeg memory"
																		}
																	],
																	"id": 199,
																	"name": "addLeg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2387:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OrderLeg_$100_memory_ptr_$returns$__$",
																		"typeString": "function (struct OrderLeg memory)"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2387:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 204,
															"nodeType": "ExpressionStatement",
															"src": "2387:15:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 192,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2352:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 193,
															"name": "legs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2356:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct OrderLeg memory[] memory"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2361:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2356:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2352:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 206,
												"initializationExpression": {
													"assignments": [
														189
													],
													"declarations": [
														{
															"constant": false,
															"id": 189,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2345:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 206,
															"src": "2340:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 188,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2340:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 191,
													"initialValue": {
														"hexValue": "30",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2349:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2340:10:1"
												},
												"loopExpression": {
													"expression": {
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2369:3:1",
														"subExpression": {
															"id": 196,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2369:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 198,
													"nodeType": "ExpressionStatement",
													"src": "2369:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2335:78:1"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 207,
														"name": "_exchange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2492:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "exchange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2504:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2492:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2492:20:1"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2522:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 212,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "2531:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2522:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:1"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2546:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 216,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2557:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2561:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2557:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2546:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2546:20:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 220,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2576:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_OrderState_$85",
															"typeString": "enum OrderState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 221,
															"name": "OrderState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2585:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_OrderState_$85_$",
																"typeString": "type(enum OrderState)"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2596:9:1",
														"memberName": "Submitted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "2585:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_OrderState_$85",
															"typeString": "enum OrderState"
														}
													},
													"src": "2576:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_OrderState_$85",
														"typeString": "enum OrderState"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2576:29:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "submit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2664:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:8:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2664:8:1"
											}
										]
									},
									"id": 229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "exchange",
												"nameLocation": "2200:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2192:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2234:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2218:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "legs",
												"nameLocation": "2267:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2249:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct OrderLeg[]"
												},
												"typeName": {
													"baseType": {
														"id": 183,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 182,
															"name": "OrderLeg",
															"nameLocations": [
																"2249:8:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 100,
															"src": "2249:8:1"
														},
														"referencedDeclaration": 100,
														"src": "2249:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OrderLeg_$100_storage_ptr",
															"typeString": "struct OrderLeg"
														}
													},
													"id": 184,
													"nodeType": "ArrayTypeName",
													"src": "2249:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_OrderLeg_$100_storage_$dyn_storage_ptr",
														"typeString": "struct OrderLeg[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:95:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:0:1"
									},
									"scope": 279,
									"src": "2171:508:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "2757:30:1",
										"statements": [
											{
												"expression": {
													"id": 234,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "2774:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 233,
												"id": 235,
												"nodeType": "Return",
												"src": "2767:13:1"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 279,
									"src": "2707:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2845:30:1",
										"statements": [
											{
												"expression": {
													"id": 243,
													"name": "_state",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "2862:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_OrderState_$85",
														"typeString": "enum OrderState"
													}
												},
												"functionReturnParameters": 242,
												"id": 244,
												"nodeType": "Return",
												"src": "2855:13:1"
											}
										]
									},
									"functionSelector": "1865c57d",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getState",
									"nameLocation": "2801:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2809:2:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2833:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_OrderState_$85",
													"typeString": "enum OrderState"
												},
												"typeName": {
													"id": 240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 239,
														"name": "OrderState",
														"nameLocations": [
															"2833:10:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 85,
														"src": "2833:10:1"
													},
													"referencedDeclaration": 85,
													"src": "2833:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_OrderState_$85",
														"typeString": "enum OrderState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:12:1"
									},
									"scope": 279,
									"src": "2792:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2929:32:1",
										"statements": [
											{
												"expression": {
													"id": 251,
													"name": "_balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "2946:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "2939:15:1"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2889:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2899:2:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2923:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2923:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2922:6:1"
									},
									"scope": 279,
									"src": "2880:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "3014:73:1",
										"statements": []
									},
									"functionSelector": "ea8a1af0",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "2998:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3004:2:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3014:0:1"
									},
									"scope": 279,
									"src": "2989:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3119:143:1",
										"statements": []
									},
									"functionSelector": "3ccfd60b",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3101:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3109:2:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3119:0:1"
									},
									"scope": 279,
									"src": "3092:170:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3295:84:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3319:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3323:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3319:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 268,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3331:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3335:5:1",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3331:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3310:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3310:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "EmitStatement",
												"src": "3305:36:1"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3351:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 273,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3363:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3367:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3363:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3351:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "3351:21:1"
											}
										]
									},
									"id": 278,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3295:0:1"
									},
									"scope": 279,
									"src": "3268:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 280,
							"src": "763:2619:1",
							"usedErrors": []
						}
					],
					"src": "39:3344:1"
				},
				"id": 1
			}
		}
	}
}